// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/config/filter/http/ext_authz/v2/ext_authz.proto

package envoy_config_filter_http_ext_authz_v2

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	_ "github.com/envoyproxy/go-control-plane/envoy/annotations"
	core "github.com/envoyproxy/go-control-plane/envoy/api/v2/core"
	_type "github.com/envoyproxy/go-control-plane/envoy/type"
	matcher "github.com/envoyproxy/go-control-plane/envoy/type/matcher"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExtAuthz struct {
	// Types that are valid to be assigned to Services:
	//	*ExtAuthz_GrpcService
	//	*ExtAuthz_HttpService
	Services                  isExtAuthz_Services            `protobuf_oneof:"services"`
	FailureModeAllow          bool                           `protobuf:"varint,2,opt,name=failure_mode_allow,json=failureModeAllow,proto3" json:"failure_mode_allow,omitempty"`
	UseAlpha                  bool                           `protobuf:"varint,4,opt,name=use_alpha,json=useAlpha,proto3" json:"use_alpha,omitempty"` // Deprecated: Do not use.
	WithRequestBody           *BufferSettings                `protobuf:"bytes,5,opt,name=with_request_body,json=withRequestBody,proto3" json:"with_request_body,omitempty"`
	ClearRouteCache           bool                           `protobuf:"varint,6,opt,name=clear_route_cache,json=clearRouteCache,proto3" json:"clear_route_cache,omitempty"`
	StatusOnError             *_type.HttpStatus              `protobuf:"bytes,7,opt,name=status_on_error,json=statusOnError,proto3" json:"status_on_error,omitempty"`
	MetadataContextNamespaces []string                       `protobuf:"bytes,8,rep,name=metadata_context_namespaces,json=metadataContextNamespaces,proto3" json:"metadata_context_namespaces,omitempty"`
	FilterEnabled             *core.RuntimeFractionalPercent `protobuf:"bytes,9,opt,name=filter_enabled,json=filterEnabled,proto3" json:"filter_enabled,omitempty"`
	IncludePeerCertificate    bool                           `protobuf:"varint,10,opt,name=include_peer_certificate,json=includePeerCertificate,proto3" json:"include_peer_certificate,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                       `json:"-"`
	XXX_unrecognized          []byte                         `json:"-"`
	XXX_sizecache             int32                          `json:"-"`
}

func (m *ExtAuthz) Reset()         { *m = ExtAuthz{} }
func (m *ExtAuthz) String() string { return proto.CompactTextString(m) }
func (*ExtAuthz) ProtoMessage()    {}
func (*ExtAuthz) Descriptor() ([]byte, []int) {
	return fileDescriptor_861cd76675296973, []int{0}
}

func (m *ExtAuthz) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtAuthz.Unmarshal(m, b)
}
func (m *ExtAuthz) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtAuthz.Marshal(b, m, deterministic)
}
func (m *ExtAuthz) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtAuthz.Merge(m, src)
}
func (m *ExtAuthz) XXX_Size() int {
	return xxx_messageInfo_ExtAuthz.Size(m)
}
func (m *ExtAuthz) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtAuthz.DiscardUnknown(m)
}

var xxx_messageInfo_ExtAuthz proto.InternalMessageInfo

type isExtAuthz_Services interface {
	isExtAuthz_Services()
}

type ExtAuthz_GrpcService struct {
	GrpcService *core.GrpcService `protobuf:"bytes,1,opt,name=grpc_service,json=grpcService,proto3,oneof"`
}

type ExtAuthz_HttpService struct {
	HttpService *HttpService `protobuf:"bytes,3,opt,name=http_service,json=httpService,proto3,oneof"`
}

func (*ExtAuthz_GrpcService) isExtAuthz_Services() {}

func (*ExtAuthz_HttpService) isExtAuthz_Services() {}

func (m *ExtAuthz) GetServices() isExtAuthz_Services {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *ExtAuthz) GetGrpcService() *core.GrpcService {
	if x, ok := m.GetServices().(*ExtAuthz_GrpcService); ok {
		return x.GrpcService
	}
	return nil
}

func (m *ExtAuthz) GetHttpService() *HttpService {
	if x, ok := m.GetServices().(*ExtAuthz_HttpService); ok {
		return x.HttpService
	}
	return nil
}

func (m *ExtAuthz) GetFailureModeAllow() bool {
	if m != nil {
		return m.FailureModeAllow
	}
	return false
}

// Deprecated: Do not use.
func (m *ExtAuthz) GetUseAlpha() bool {
	if m != nil {
		return m.UseAlpha
	}
	return false
}

func (m *ExtAuthz) GetWithRequestBody() *BufferSettings {
	if m != nil {
		return m.WithRequestBody
	}
	return nil
}

func (m *ExtAuthz) GetClearRouteCache() bool {
	if m != nil {
		return m.ClearRouteCache
	}
	return false
}

func (m *ExtAuthz) GetStatusOnError() *_type.HttpStatus {
	if m != nil {
		return m.StatusOnError
	}
	return nil
}

func (m *ExtAuthz) GetMetadataContextNamespaces() []string {
	if m != nil {
		return m.MetadataContextNamespaces
	}
	return nil
}

func (m *ExtAuthz) GetFilterEnabled() *core.RuntimeFractionalPercent {
	if m != nil {
		return m.FilterEnabled
	}
	return nil
}

func (m *ExtAuthz) GetIncludePeerCertificate() bool {
	if m != nil {
		return m.IncludePeerCertificate
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ExtAuthz) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ExtAuthz_GrpcService)(nil),
		(*ExtAuthz_HttpService)(nil),
	}
}

type BufferSettings struct {
	MaxRequestBytes      uint32   `protobuf:"varint,1,opt,name=max_request_bytes,json=maxRequestBytes,proto3" json:"max_request_bytes,omitempty"`
	AllowPartialMessage  bool     `protobuf:"varint,2,opt,name=allow_partial_message,json=allowPartialMessage,proto3" json:"allow_partial_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BufferSettings) Reset()         { *m = BufferSettings{} }
func (m *BufferSettings) String() string { return proto.CompactTextString(m) }
func (*BufferSettings) ProtoMessage()    {}
func (*BufferSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_861cd76675296973, []int{1}
}

func (m *BufferSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BufferSettings.Unmarshal(m, b)
}
func (m *BufferSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BufferSettings.Marshal(b, m, deterministic)
}
func (m *BufferSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BufferSettings.Merge(m, src)
}
func (m *BufferSettings) XXX_Size() int {
	return xxx_messageInfo_BufferSettings.Size(m)
}
func (m *BufferSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_BufferSettings.DiscardUnknown(m)
}

var xxx_messageInfo_BufferSettings proto.InternalMessageInfo

func (m *BufferSettings) GetMaxRequestBytes() uint32 {
	if m != nil {
		return m.MaxRequestBytes
	}
	return 0
}

func (m *BufferSettings) GetAllowPartialMessage() bool {
	if m != nil {
		return m.AllowPartialMessage
	}
	return false
}

type HttpService struct {
	ServerUri             *core.HttpUri          `protobuf:"bytes,1,opt,name=server_uri,json=serverUri,proto3" json:"server_uri,omitempty"`
	PathPrefix            string                 `protobuf:"bytes,2,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
	AuthorizationRequest  *AuthorizationRequest  `protobuf:"bytes,7,opt,name=authorization_request,json=authorizationRequest,proto3" json:"authorization_request,omitempty"`
	AuthorizationResponse *AuthorizationResponse `protobuf:"bytes,8,opt,name=authorization_response,json=authorizationResponse,proto3" json:"authorization_response,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}               `json:"-"`
	XXX_unrecognized      []byte                 `json:"-"`
	XXX_sizecache         int32                  `json:"-"`
}

func (m *HttpService) Reset()         { *m = HttpService{} }
func (m *HttpService) String() string { return proto.CompactTextString(m) }
func (*HttpService) ProtoMessage()    {}
func (*HttpService) Descriptor() ([]byte, []int) {
	return fileDescriptor_861cd76675296973, []int{2}
}

func (m *HttpService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpService.Unmarshal(m, b)
}
func (m *HttpService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpService.Marshal(b, m, deterministic)
}
func (m *HttpService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpService.Merge(m, src)
}
func (m *HttpService) XXX_Size() int {
	return xxx_messageInfo_HttpService.Size(m)
}
func (m *HttpService) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpService.DiscardUnknown(m)
}

var xxx_messageInfo_HttpService proto.InternalMessageInfo

func (m *HttpService) GetServerUri() *core.HttpUri {
	if m != nil {
		return m.ServerUri
	}
	return nil
}

func (m *HttpService) GetPathPrefix() string {
	if m != nil {
		return m.PathPrefix
	}
	return ""
}

func (m *HttpService) GetAuthorizationRequest() *AuthorizationRequest {
	if m != nil {
		return m.AuthorizationRequest
	}
	return nil
}

func (m *HttpService) GetAuthorizationResponse() *AuthorizationResponse {
	if m != nil {
		return m.AuthorizationResponse
	}
	return nil
}

type AuthorizationRequest struct {
	AllowedHeaders       *matcher.ListStringMatcher `protobuf:"bytes,1,opt,name=allowed_headers,json=allowedHeaders,proto3" json:"allowed_headers,omitempty"`
	HeadersToAdd         []*core.HeaderValue        `protobuf:"bytes,2,rep,name=headers_to_add,json=headersToAdd,proto3" json:"headers_to_add,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *AuthorizationRequest) Reset()         { *m = AuthorizationRequest{} }
func (m *AuthorizationRequest) String() string { return proto.CompactTextString(m) }
func (*AuthorizationRequest) ProtoMessage()    {}
func (*AuthorizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_861cd76675296973, []int{3}
}

func (m *AuthorizationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizationRequest.Unmarshal(m, b)
}
func (m *AuthorizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizationRequest.Marshal(b, m, deterministic)
}
func (m *AuthorizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizationRequest.Merge(m, src)
}
func (m *AuthorizationRequest) XXX_Size() int {
	return xxx_messageInfo_AuthorizationRequest.Size(m)
}
func (m *AuthorizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizationRequest proto.InternalMessageInfo

func (m *AuthorizationRequest) GetAllowedHeaders() *matcher.ListStringMatcher {
	if m != nil {
		return m.AllowedHeaders
	}
	return nil
}

func (m *AuthorizationRequest) GetHeadersToAdd() []*core.HeaderValue {
	if m != nil {
		return m.HeadersToAdd
	}
	return nil
}

type AuthorizationResponse struct {
	AllowedUpstreamHeaders *matcher.ListStringMatcher `protobuf:"bytes,1,opt,name=allowed_upstream_headers,json=allowedUpstreamHeaders,proto3" json:"allowed_upstream_headers,omitempty"`
	AllowedClientHeaders   *matcher.ListStringMatcher `protobuf:"bytes,2,opt,name=allowed_client_headers,json=allowedClientHeaders,proto3" json:"allowed_client_headers,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                   `json:"-"`
	XXX_unrecognized       []byte                     `json:"-"`
	XXX_sizecache          int32                      `json:"-"`
}

func (m *AuthorizationResponse) Reset()         { *m = AuthorizationResponse{} }
func (m *AuthorizationResponse) String() string { return proto.CompactTextString(m) }
func (*AuthorizationResponse) ProtoMessage()    {}
func (*AuthorizationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_861cd76675296973, []int{4}
}

func (m *AuthorizationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizationResponse.Unmarshal(m, b)
}
func (m *AuthorizationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizationResponse.Marshal(b, m, deterministic)
}
func (m *AuthorizationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizationResponse.Merge(m, src)
}
func (m *AuthorizationResponse) XXX_Size() int {
	return xxx_messageInfo_AuthorizationResponse.Size(m)
}
func (m *AuthorizationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizationResponse proto.InternalMessageInfo

func (m *AuthorizationResponse) GetAllowedUpstreamHeaders() *matcher.ListStringMatcher {
	if m != nil {
		return m.AllowedUpstreamHeaders
	}
	return nil
}

func (m *AuthorizationResponse) GetAllowedClientHeaders() *matcher.ListStringMatcher {
	if m != nil {
		return m.AllowedClientHeaders
	}
	return nil
}

type ExtAuthzPerRoute struct {
	// Types that are valid to be assigned to Override:
	//	*ExtAuthzPerRoute_Disabled
	//	*ExtAuthzPerRoute_CheckSettings
	Override             isExtAuthzPerRoute_Override `protobuf_oneof:"override"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ExtAuthzPerRoute) Reset()         { *m = ExtAuthzPerRoute{} }
func (m *ExtAuthzPerRoute) String() string { return proto.CompactTextString(m) }
func (*ExtAuthzPerRoute) ProtoMessage()    {}
func (*ExtAuthzPerRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_861cd76675296973, []int{5}
}

func (m *ExtAuthzPerRoute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtAuthzPerRoute.Unmarshal(m, b)
}
func (m *ExtAuthzPerRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtAuthzPerRoute.Marshal(b, m, deterministic)
}
func (m *ExtAuthzPerRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtAuthzPerRoute.Merge(m, src)
}
func (m *ExtAuthzPerRoute) XXX_Size() int {
	return xxx_messageInfo_ExtAuthzPerRoute.Size(m)
}
func (m *ExtAuthzPerRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtAuthzPerRoute.DiscardUnknown(m)
}

var xxx_messageInfo_ExtAuthzPerRoute proto.InternalMessageInfo

type isExtAuthzPerRoute_Override interface {
	isExtAuthzPerRoute_Override()
}

type ExtAuthzPerRoute_Disabled struct {
	Disabled bool `protobuf:"varint,1,opt,name=disabled,proto3,oneof"`
}

type ExtAuthzPerRoute_CheckSettings struct {
	CheckSettings *CheckSettings `protobuf:"bytes,2,opt,name=check_settings,json=checkSettings,proto3,oneof"`
}

func (*ExtAuthzPerRoute_Disabled) isExtAuthzPerRoute_Override() {}

func (*ExtAuthzPerRoute_CheckSettings) isExtAuthzPerRoute_Override() {}

func (m *ExtAuthzPerRoute) GetOverride() isExtAuthzPerRoute_Override {
	if m != nil {
		return m.Override
	}
	return nil
}

func (m *ExtAuthzPerRoute) GetDisabled() bool {
	if x, ok := m.GetOverride().(*ExtAuthzPerRoute_Disabled); ok {
		return x.Disabled
	}
	return false
}

func (m *ExtAuthzPerRoute) GetCheckSettings() *CheckSettings {
	if x, ok := m.GetOverride().(*ExtAuthzPerRoute_CheckSettings); ok {
		return x.CheckSettings
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ExtAuthzPerRoute) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ExtAuthzPerRoute_Disabled)(nil),
		(*ExtAuthzPerRoute_CheckSettings)(nil),
	}
}

type CheckSettings struct {
	ContextExtensions    map[string]string `protobuf:"bytes,1,rep,name=context_extensions,json=contextExtensions,proto3" json:"context_extensions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CheckSettings) Reset()         { *m = CheckSettings{} }
func (m *CheckSettings) String() string { return proto.CompactTextString(m) }
func (*CheckSettings) ProtoMessage()    {}
func (*CheckSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_861cd76675296973, []int{6}
}

func (m *CheckSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckSettings.Unmarshal(m, b)
}
func (m *CheckSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckSettings.Marshal(b, m, deterministic)
}
func (m *CheckSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckSettings.Merge(m, src)
}
func (m *CheckSettings) XXX_Size() int {
	return xxx_messageInfo_CheckSettings.Size(m)
}
func (m *CheckSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckSettings.DiscardUnknown(m)
}

var xxx_messageInfo_CheckSettings proto.InternalMessageInfo

func (m *CheckSettings) GetContextExtensions() map[string]string {
	if m != nil {
		return m.ContextExtensions
	}
	return nil
}

func init() {
	proto.RegisterType((*ExtAuthz)(nil), "envoy.config.filter.http.ext_authz.v2.ExtAuthz")
	proto.RegisterType((*BufferSettings)(nil), "envoy.config.filter.http.ext_authz.v2.BufferSettings")
	proto.RegisterType((*HttpService)(nil), "envoy.config.filter.http.ext_authz.v2.HttpService")
	proto.RegisterType((*AuthorizationRequest)(nil), "envoy.config.filter.http.ext_authz.v2.AuthorizationRequest")
	proto.RegisterType((*AuthorizationResponse)(nil), "envoy.config.filter.http.ext_authz.v2.AuthorizationResponse")
	proto.RegisterType((*ExtAuthzPerRoute)(nil), "envoy.config.filter.http.ext_authz.v2.ExtAuthzPerRoute")
	proto.RegisterType((*CheckSettings)(nil), "envoy.config.filter.http.ext_authz.v2.CheckSettings")
	proto.RegisterMapType((map[string]string)(nil), "envoy.config.filter.http.ext_authz.v2.CheckSettings.ContextExtensionsEntry")
}

func init() {
	proto.RegisterFile("envoy/config/filter/http/ext_authz/v2/ext_authz.proto", fileDescriptor_861cd76675296973)
}

var fileDescriptor_861cd76675296973 = []byte{
	// 1119 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x4f, 0x6f, 0x1b, 0xc5,
	0x1b, 0xee, 0xfa, 0x4f, 0xba, 0x9e, 0xd4, 0xb1, 0x33, 0xbf, 0x24, 0xbf, 0x25, 0x40, 0x6b, 0x19,
	0x22, 0x55, 0xa5, 0x5a, 0x4b, 0x0e, 0x95, 0xca, 0x1f, 0x55, 0x8a, 0xdd, 0x40, 0x14, 0x68, 0xb1,
	0xb6, 0x14, 0x0e, 0x1c, 0x46, 0x93, 0xdd, 0xd7, 0xf6, 0xd0, 0xf5, 0xee, 0x32, 0x33, 0xeb, 0xda,
	0x3d, 0xf5, 0xcc, 0x85, 0x2b, 0x9f, 0x80, 0x13, 0x37, 0x2e, 0x88, 0x4f, 0xc0, 0xb5, 0x48, 0x7c,
	0x07, 0x4e, 0x1c, 0x7a, 0x42, 0x3d, 0x20, 0x34, 0x7f, 0x36, 0x76, 0x1a, 0x23, 0x85, 0xde, 0x3c,
	0xf3, 0x3c, 0xef, 0xf3, 0x3e, 0xf3, 0xce, 0x3b, 0xaf, 0x17, 0xdd, 0x82, 0x64, 0x9a, 0xce, 0x3b,
	0x61, 0x9a, 0x0c, 0xd9, 0xa8, 0x33, 0x64, 0xb1, 0x04, 0xde, 0x19, 0x4b, 0x99, 0x75, 0x60, 0x26,
	0x09, 0xcd, 0xe5, 0xf8, 0x49, 0x67, 0xda, 0x5d, 0x2c, 0xfc, 0x8c, 0xa7, 0x32, 0xc5, 0x7b, 0x3a,
	0xcc, 0x37, 0x61, 0xbe, 0x09, 0xf3, 0x55, 0x98, 0xbf, 0x60, 0x4e, 0xbb, 0xbb, 0x6f, 0x18, 0x75,
	0x9a, 0x31, 0x25, 0x12, 0xa6, 0x1c, 0x3a, 0x27, 0x54, 0x80, 0x11, 0xd9, 0x7d, 0xfb, 0x3c, 0x3a,
	0xe2, 0x59, 0x48, 0x04, 0xf0, 0x29, 0x0b, 0x0b, 0x56, 0xeb, 0x3c, 0x4b, 0x25, 0x22, 0x39, 0x67,
	0x96, 0x61, 0xb3, 0xc8, 0x79, 0x66, 0x21, 0x21, 0xa9, 0xcc, 0x85, 0x45, 0xaf, 0x2d, 0xa1, 0x13,
	0x2a, 0xc3, 0x31, 0xf0, 0x8e, 0x90, 0x9c, 0x25, 0x23, 0x4b, 0x78, 0xcb, 0x26, 0x48, 0x92, 0x54,
	0x52, 0xc9, 0xd2, 0x44, 0x74, 0x22, 0xc8, 0x38, 0x84, 0x7a, 0x61, 0x49, 0x57, 0xf3, 0x28, 0xa3,
	0x67, 0x38, 0x13, 0x36, 0xe2, 0x54, 0x16, 0x2e, 0xdf, 0x3c, 0x87, 0x9f, 0x31, 0xf1, 0xff, 0x29,
	0x8d, 0x59, 0x44, 0x25, 0x74, 0x8a, 0x1f, 0x06, 0x68, 0xff, 0x50, 0x45, 0xee, 0xe1, 0x4c, 0x1e,
	0xa8, 0x8a, 0xe1, 0x3e, 0xba, 0xb2, 0x5c, 0x00, 0xcf, 0x69, 0x39, 0xd7, 0xd7, 0xbb, 0x57, 0x7d,
	0x53, 0x6c, 0x9a, 0x31, 0x7f, 0xda, 0xf5, 0x55, 0x05, 0xfc, 0x8f, 0x79, 0x16, 0x3e, 0x30, 0xac,
	0xa3, 0x4b, 0xc1, 0xfa, 0x68, 0xb1, 0xc4, 0x5f, 0xa2, 0x2b, 0xa6, 0x08, 0x56, 0xa4, 0xac, 0x45,
	0xba, 0xfe, 0x85, 0x6e, 0xcc, 0x3f, 0x92, 0x32, 0x5b, 0x12, 0x1e, 0x2f, 0x96, 0xf8, 0x26, 0xc2,
	0x43, 0xca, 0xe2, 0x9c, 0x03, 0x99, 0xa4, 0x11, 0x10, 0x1a, 0xc7, 0xe9, 0x63, 0xaf, 0xd4, 0x72,
	0xae, 0xbb, 0x41, 0xd3, 0x22, 0xf7, 0xd2, 0x08, 0x0e, 0xd4, 0x3e, 0xde, 0x43, 0xb5, 0x5c, 0x28,
	0x52, 0x36, 0xa6, 0x5e, 0x45, 0x91, 0x7a, 0xee, 0xcf, 0x7f, 0x3e, 0xff, 0xad, 0xea, 0x78, 0x4e,
	0xe0, 0xe6, 0x02, 0x0e, 0x14, 0x82, 0x29, 0xda, 0x7c, 0xcc, 0xe4, 0x98, 0x70, 0xf8, 0x26, 0x07,
	0x21, 0xc9, 0x49, 0x1a, 0xcd, 0xbd, 0xaa, 0xb6, 0x7c, 0xeb, 0x82, 0x96, 0x7b, 0xf9, 0x70, 0x08,
	0xfc, 0x01, 0x48, 0xc9, 0x92, 0x91, 0x08, 0x1a, 0x4a, 0x2f, 0x30, 0x72, 0xbd, 0x34, 0x9a, 0xe3,
	0x1b, 0x68, 0x33, 0x8c, 0x81, 0x72, 0xc2, 0xd3, 0x5c, 0x02, 0x09, 0x69, 0x38, 0x06, 0x6f, 0x4d,
	0xdb, 0x6e, 0x68, 0x20, 0x50, 0xfb, 0x7d, 0xb5, 0x8d, 0xef, 0xa0, 0x86, 0xb9, 0x37, 0x92, 0x26,
	0x04, 0x38, 0x4f, 0xb9, 0x77, 0x59, 0x9b, 0xd9, 0xb1, 0x66, 0x54, 0x1b, 0x99, 0x22, 0x69, 0x5a,
	0x50, 0x37, 0xf4, 0xcf, 0x92, 0x43, 0x45, 0xc6, 0x77, 0xd0, 0xeb, 0x13, 0x90, 0x34, 0xa2, 0x92,
	0x92, 0x30, 0x4d, 0xa4, 0x32, 0x9a, 0xd0, 0x09, 0x88, 0x8c, 0x86, 0x20, 0x3c, 0xb7, 0x55, 0xbe,
	0x5e, 0x0b, 0x5e, 0x2b, 0x28, 0x7d, 0xc3, 0xb8, 0x7f, 0x4a, 0xc0, 0x01, 0xda, 0x30, 0xe7, 0x24,
	0x90, 0xd0, 0x93, 0x18, 0x22, 0xaf, 0xa6, 0xd3, 0xbf, 0xb3, 0xa2, 0x07, 0x82, 0x3c, 0x91, 0x6c,
	0x02, 0x1f, 0x71, 0x1a, 0xaa, 0x8e, 0xa3, 0xf1, 0x00, 0x78, 0x08, 0x89, 0x0c, 0xea, 0x46, 0xe2,
	0xd0, 0x28, 0xe0, 0xdb, 0xc8, 0x63, 0x49, 0x18, 0xe7, 0x11, 0x90, 0x0c, 0x80, 0x93, 0x10, 0xb8,
	0x64, 0x43, 0x16, 0x52, 0x09, 0x1e, 0xd2, 0x65, 0xd8, 0xb1, 0xf8, 0x00, 0x80, 0xf7, 0x17, 0x68,
	0x0f, 0x21, 0xd7, 0x76, 0x91, 0x68, 0xcf, 0xd1, 0xc6, 0xd9, 0x42, 0xe3, 0x7d, 0xb4, 0x39, 0xa1,
	0xb3, 0xc5, 0xcd, 0xcd, 0x25, 0x08, 0xdd, 0xb2, 0xf5, 0xde, 0xe5, 0x17, 0xbd, 0xca, 0x8d, 0x52,
	0xeb, 0x52, 0xd0, 0x98, 0xd0, 0x59, 0x71, 0x17, 0x0a, 0xc7, 0x5d, 0xb4, 0xad, 0xfb, 0x86, 0x64,
	0x94, 0x4b, 0x46, 0x63, 0x32, 0x01, 0x21, 0xe8, 0x08, 0x6c, 0x1f, 0xfd, 0x4f, 0x83, 0x03, 0x83,
	0xdd, 0x33, 0x50, 0xfb, 0x8f, 0x12, 0x5a, 0x5f, 0xea, 0x4b, 0xfc, 0x1e, 0x42, 0xca, 0x16, 0x70,
	0x35, 0x03, 0xec, 0x23, 0xd9, 0x5d, 0x51, 0x20, 0x15, 0xf3, 0x90, 0xb3, 0xa0, 0x66, 0xd8, 0x0f,
	0x39, 0xc3, 0xd7, 0xd0, 0x7a, 0x46, 0xe5, 0x98, 0x64, 0x1c, 0x86, 0x6c, 0xa6, 0x93, 0xd6, 0x02,
	0xa4, 0xb6, 0x06, 0x7a, 0x07, 0x67, 0x68, 0x5b, 0x35, 0x56, 0xca, 0xd9, 0x13, 0xfd, 0x8e, 0x8b,
	0xe3, 0xd9, 0x36, 0xf8, 0xe0, 0x82, 0x3d, 0x79, 0xb0, 0xac, 0x61, 0x0b, 0x10, 0x6c, 0xd1, 0x15,
	0xbb, 0x58, 0xa0, 0x9d, 0x97, 0x33, 0x8a, 0x2c, 0x4d, 0x04, 0x78, 0xae, 0x4e, 0xf9, 0xe1, 0xab,
	0xa5, 0x34, 0x1a, 0xc1, 0x36, 0x5d, 0xb5, 0x7d, 0x5c, 0x71, 0xcb, 0xcd, 0xca, 0x71, 0xc5, 0xad,
	0x34, 0xab, 0xc7, 0x15, 0xb7, 0xda, 0x5c, 0x3b, 0xae, 0xb8, 0x6b, 0xcd, 0xcb, 0xed, 0x1f, 0x1d,
	0xb4, 0xb5, 0xca, 0x3b, 0xbe, 0x8f, 0x1a, 0xfa, 0x6a, 0x20, 0x22, 0x63, 0xa0, 0x11, 0x70, 0x61,
	0x0b, 0xbf, 0xb7, 0xfc, 0x30, 0xec, 0x7c, 0xf5, 0x3f, 0x65, 0x42, 0x3e, 0xd0, 0x33, 0xf6, 0x9e,
	0xd9, 0x09, 0x36, 0x6c, 0xf4, 0x91, 0x09, 0xc6, 0x77, 0xd1, 0x86, 0xd5, 0x21, 0x32, 0x25, 0x34,
	0x8a, 0xbc, 0x52, 0xab, 0xfc, 0x2f, 0xc3, 0xce, 0xc4, 0x7c, 0x41, 0xe3, 0x1c, 0x82, 0x2b, 0x36,
	0xea, 0xf3, 0xf4, 0x20, 0x8a, 0xda, 0xbf, 0x3b, 0x68, 0x7b, 0xe5, 0xb9, 0x31, 0x41, 0x5e, 0xe1,
	0x37, 0xcf, 0x84, 0xe4, 0x40, 0x27, 0xaf, 0x66, 0x7c, 0xc7, 0xca, 0x3c, 0xb4, 0x2a, 0xc5, 0x01,
	0xbe, 0x42, 0x05, 0x42, 0xc2, 0x98, 0x41, 0x22, 0x4f, 0xe5, 0x4b, 0xff, 0x45, 0x7e, 0xcb, 0x8a,
	0xf4, 0xb5, 0x86, 0x15, 0x6f, 0xff, 0xe4, 0xa0, 0x66, 0xf1, 0xaf, 0x30, 0x00, 0x33, 0xa0, 0xf0,
	0x1e, 0x72, 0x23, 0x26, 0xcc, 0x54, 0x70, 0xf4, 0x40, 0x55, 0xcf, 0xec, 0xeb, 0x92, 0xeb, 0x1c,
	0x5d, 0x0a, 0x4e, 0x21, 0x3c, 0x42, 0x1b, 0xe1, 0x18, 0xc2, 0x47, 0x44, 0xd8, 0x87, 0x6a, 0x0d,
	0xbd, 0x7b, 0xc1, 0x3e, 0xea, 0xab, 0xe0, 0xe2, 0x91, 0xf7, 0xdc, 0x17, 0xbd, 0xea, 0xb7, 0x4e,
	0xa9, 0xa9, 0x72, 0xd4, 0xc3, 0x33, 0x50, 0x03, 0xb9, 0xe9, 0x14, 0x38, 0x67, 0x11, 0xe0, 0xf2,
	0x5f, 0x3d, 0xa7, 0xfd, 0xcc, 0x41, 0xf5, 0x33, 0xd1, 0xf8, 0x09, 0xc2, 0xc5, 0x14, 0x84, 0x99,
	0x84, 0x44, 0xa8, 0x7f, 0x46, 0xcf, 0xd1, 0x37, 0xfd, 0xc9, 0xab, 0xf8, 0xf1, 0xed, 0xc8, 0x3c,
	0x3c, 0x55, 0x3b, 0x4c, 0x24, 0x9f, 0x07, 0x9b, 0xe1, 0xcb, 0xfb, 0xbb, 0x77, 0xd1, 0xce, 0x6a,
	0x32, 0x6e, 0xa2, 0xf2, 0x23, 0x98, 0xeb, 0x1a, 0xd6, 0x02, 0xf5, 0x13, 0x6f, 0xa1, 0xea, 0x54,
	0xb5, 0x97, 0x1d, 0x08, 0x66, 0xf1, 0x7e, 0xe9, 0xb6, 0xd3, 0x7b, 0xea, 0x3c, 0xff, 0xfe, 0xef,
	0xef, 0xaa, 0x37, 0xf1, 0x0d, 0xe3, 0x76, 0x71, 0x0c, 0xeb, 0x58, 0x9c, 0xb3, 0xbc, 0xff, 0xcb,
	0xd3, 0x5f, 0x9f, 0xad, 0x95, 0x9a, 0x0e, 0xda, 0x67, 0xa9, 0x39, 0x64, 0xc6, 0xd3, 0xd9, 0xfc,
	0x62, 0xe7, 0xed, 0xd5, 0x4f, 0x2f, 0x5e, 0x7d, 0x20, 0x0c, 0x9c, 0x93, 0x35, 0xfd, 0xa5, 0xb0,
	0xff, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x77, 0x29, 0x0b, 0x78, 0xab, 0x09, 0x00, 0x00,
}
