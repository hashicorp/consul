package agent

func init() {
	registerEndpoint("/v1/acl/bootstrap", (*HTTPServer).ACLBootstrap)
	registerEndpoint("/v1/acl/create", (*HTTPServer).ACLCreate)
	registerEndpoint("/v1/acl/update", (*HTTPServer).ACLUpdate)
	registerEndpoint("/v1/acl/destroy/", (*HTTPServer).ACLDestroy)
	registerEndpoint("/v1/acl/info/", (*HTTPServer).ACLGet)
	registerEndpoint("/v1/acl/clone/", (*HTTPServer).ACLClone)
	registerEndpoint("/v1/acl/list", (*HTTPServer).ACLList)
	registerEndpoint("/v1/acl/replication", (*HTTPServer).ACLReplicationStatus)
	registerEndpoint("/v1/agent/token/", (*HTTPServer).AgentToken)
	registerEndpoint("/v1/agent/self", (*HTTPServer).AgentSelf)
	registerEndpoint("/v1/agent/maintenance", (*HTTPServer).AgentNodeMaintenance)
	registerEndpoint("/v1/agent/reload", (*HTTPServer).AgentReload)
	registerEndpoint("/v1/agent/monitor", (*HTTPServer).AgentMonitor)
	registerEndpoint("/v1/agent/metrics", (*HTTPServer).AgentMetrics)
	registerEndpoint("/v1/agent/services", (*HTTPServer).AgentServices)
	registerEndpoint("/v1/agent/checks", (*HTTPServer).AgentChecks)
	registerEndpoint("/v1/agent/members", (*HTTPServer).AgentMembers)
	registerEndpoint("/v1/agent/join/", (*HTTPServer).AgentJoin)
	registerEndpoint("/v1/agent/leave", (*HTTPServer).AgentLeave)
	registerEndpoint("/v1/agent/force-leave/", (*HTTPServer).AgentForceLeave)
	registerEndpoint("/v1/agent/check/register", (*HTTPServer).AgentRegisterCheck)
	registerEndpoint("/v1/agent/check/deregister/", (*HTTPServer).AgentDeregisterCheck)
	registerEndpoint("/v1/agent/check/pass/", (*HTTPServer).AgentCheckPass)
	registerEndpoint("/v1/agent/check/warn/", (*HTTPServer).AgentCheckWarn)
	registerEndpoint("/v1/agent/check/fail/", (*HTTPServer).AgentCheckFail)
	registerEndpoint("/v1/agent/check/update/", (*HTTPServer).AgentCheckUpdate)
	registerEndpoint("/v1/agent/service/register", (*HTTPServer).AgentRegisterService)
	registerEndpoint("/v1/agent/service/deregister/", (*HTTPServer).AgentDeregisterService)
	registerEndpoint("/v1/agent/service/maintenance/", (*HTTPServer).AgentServiceMaintenance)
	registerEndpoint("/v1/catalog/register", (*HTTPServer).CatalogRegister)
	registerEndpoint("/v1/catalog/deregister", (*HTTPServer).CatalogDeregister)
	registerEndpoint("/v1/catalog/datacenters", (*HTTPServer).CatalogDatacenters)
	registerEndpoint("/v1/catalog/nodes", (*HTTPServer).CatalogNodes)
	registerEndpoint("/v1/catalog/services", (*HTTPServer).CatalogServices)
	registerEndpoint("/v1/catalog/service/", (*HTTPServer).CatalogServiceNodes)
	registerEndpoint("/v1/catalog/node/", (*HTTPServer).CatalogNodeServices)
	registerEndpoint("/v1/coordinate/datacenters", (*HTTPServer).CoordinateDatacenters)
	registerEndpoint("/v1/coordinate/nodes", (*HTTPServer).CoordinateNodes)
	registerEndpoint("/v1/coordinate/node/", (*HTTPServer).CoordinateNode)
	registerEndpoint("/v1/coordinate/update", (*HTTPServer).CoordinateUpdate)
	registerEndpoint("/v1/event/fire/", (*HTTPServer).EventFire)
	registerEndpoint("/v1/event/list", (*HTTPServer).EventList)
	registerEndpoint("/v1/health/node/", (*HTTPServer).HealthNodeChecks)
	registerEndpoint("/v1/health/checks/", (*HTTPServer).HealthServiceChecks)
	registerEndpoint("/v1/health/state/", (*HTTPServer).HealthChecksInState)
	registerEndpoint("/v1/health/service/", (*HTTPServer).HealthServiceNodes)
	registerEndpoint("/v1/internal/ui/nodes", (*HTTPServer).UINodes)
	registerEndpoint("/v1/internal/ui/node/", (*HTTPServer).UINodeInfo)
	registerEndpoint("/v1/internal/ui/services", (*HTTPServer).UIServices)
	registerEndpoint("/v1/kv/", (*HTTPServer).KVSEndpoint)
	registerEndpoint("/v1/operator/raft/configuration", (*HTTPServer).OperatorRaftConfiguration)
	registerEndpoint("/v1/operator/raft/peer", (*HTTPServer).OperatorRaftPeer)
	registerEndpoint("/v1/operator/keyring", (*HTTPServer).OperatorKeyringEndpoint)
	registerEndpoint("/v1/operator/autopilot/configuration", (*HTTPServer).OperatorAutopilotConfiguration)
	registerEndpoint("/v1/operator/autopilot/health", (*HTTPServer).OperatorServerHealth)
	registerEndpoint("/v1/query", (*HTTPServer).PreparedQueryGeneral)
	registerEndpoint("/v1/query/", (*HTTPServer).PreparedQuerySpecific)
	registerEndpoint("/v1/session/create", (*HTTPServer).SessionCreate)
	registerEndpoint("/v1/session/destroy/", (*HTTPServer).SessionDestroy)
	registerEndpoint("/v1/session/renew/", (*HTTPServer).SessionRenew)
	registerEndpoint("/v1/session/info/", (*HTTPServer).SessionGet)
	registerEndpoint("/v1/session/node/", (*HTTPServer).SessionsForNode)
	registerEndpoint("/v1/session/list", (*HTTPServer).SessionList)
	registerEndpoint("/v1/status/leader", (*HTTPServer).StatusLeader)
	registerEndpoint("/v1/status/peers", (*HTTPServer).StatusPeers)
	registerEndpoint("/v1/snapshot", (*HTTPServer).Snapshot)
	registerEndpoint("/v1/txn", (*HTTPServer).Txn)
}
