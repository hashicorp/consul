// Code generated by mockery v2.37.1. DO NOT EDIT.

package reportingmock

import mock "github.com/stretchr/testify/mock"

// ServerDelegate is an autogenerated mock type for the ServerDelegate type
type ServerDelegate struct {
	mock.Mock
}

type ServerDelegate_Expecter struct {
	mock *mock.Mock
}

func (_m *ServerDelegate) EXPECT() *ServerDelegate_Expecter {
	return &ServerDelegate_Expecter{mock: &_m.Mock}
}

// GetSystemMetadata provides a mock function with given fields: key
func (_m *ServerDelegate) GetSystemMetadata(key string) (string, error) {
	ret := _m.Called(key)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (string, error)); ok {
		return rf(key)
	}
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ServerDelegate_GetSystemMetadata_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetSystemMetadata'
type ServerDelegate_GetSystemMetadata_Call struct {
	*mock.Call
}

// GetSystemMetadata is a helper method to define mock.On call
//   - key string
func (_e *ServerDelegate_Expecter) GetSystemMetadata(key interface{}) *ServerDelegate_GetSystemMetadata_Call {
	return &ServerDelegate_GetSystemMetadata_Call{Call: _e.mock.On("GetSystemMetadata", key)}
}

func (_c *ServerDelegate_GetSystemMetadata_Call) Run(run func(key string)) *ServerDelegate_GetSystemMetadata_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *ServerDelegate_GetSystemMetadata_Call) Return(_a0 string, _a1 error) *ServerDelegate_GetSystemMetadata_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *ServerDelegate_GetSystemMetadata_Call) RunAndReturn(run func(string) (string, error)) *ServerDelegate_GetSystemMetadata_Call {
	_c.Call.Return(run)
	return _c
}

// IsLeader provides a mock function with given fields:
func (_m *ServerDelegate) IsLeader() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// ServerDelegate_IsLeader_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IsLeader'
type ServerDelegate_IsLeader_Call struct {
	*mock.Call
}

// IsLeader is a helper method to define mock.On call
func (_e *ServerDelegate_Expecter) IsLeader() *ServerDelegate_IsLeader_Call {
	return &ServerDelegate_IsLeader_Call{Call: _e.mock.On("IsLeader")}
}

func (_c *ServerDelegate_IsLeader_Call) Run(run func()) *ServerDelegate_IsLeader_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ServerDelegate_IsLeader_Call) Return(_a0 bool) *ServerDelegate_IsLeader_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ServerDelegate_IsLeader_Call) RunAndReturn(run func() bool) *ServerDelegate_IsLeader_Call {
	_c.Call.Return(run)
	return _c
}

// SetSystemMetadataKey provides a mock function with given fields: key, val
func (_m *ServerDelegate) SetSystemMetadataKey(key string, val string) error {
	ret := _m.Called(key, val)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(key, val)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ServerDelegate_SetSystemMetadataKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetSystemMetadataKey'
type ServerDelegate_SetSystemMetadataKey_Call struct {
	*mock.Call
}

// SetSystemMetadataKey is a helper method to define mock.On call
//   - key string
//   - val string
func (_e *ServerDelegate_Expecter) SetSystemMetadataKey(key interface{}, val interface{}) *ServerDelegate_SetSystemMetadataKey_Call {
	return &ServerDelegate_SetSystemMetadataKey_Call{Call: _e.mock.On("SetSystemMetadataKey", key, val)}
}

func (_c *ServerDelegate_SetSystemMetadataKey_Call) Run(run func(key string, val string)) *ServerDelegate_SetSystemMetadataKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *ServerDelegate_SetSystemMetadataKey_Call) Return(_a0 error) *ServerDelegate_SetSystemMetadataKey_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ServerDelegate_SetSystemMetadataKey_Call) RunAndReturn(run func(string, string) error) *ServerDelegate_SetSystemMetadataKey_Call {
	_c.Call.Return(run)
	return _c
}

// NewServerDelegate creates a new instance of ServerDelegate. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewServerDelegate(t interface {
	mock.TestingT
	Cleanup(func())
}) *ServerDelegate {
	mock := &ServerDelegate{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
