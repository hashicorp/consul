// Code generated by mockery v2.15.0. DO NOT EDIT.

package cachetype

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockRPC is an autogenerated mock type for the RPC type
type MockRPC struct {
	mock.Mock
}

// RPC provides a mock function with given fields: ctx, method, args, reply
func (_m *MockRPC) RPC(ctx context.Context, method string, args interface{}, reply interface{}) error {
	ret := _m.Called(ctx, method, args, reply)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, interface{}, interface{}) error); ok {
		r0 = rf(ctx, method, args, reply)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMockRPC interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockRPC creates a new instance of MockRPC. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockRPC(t mockConstructorTestingTNewMockRPC) *MockRPC {
	mock := &MockRPC{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
