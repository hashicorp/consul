{
  "proxyState": {
    "clusters": {
      "tcp.api-2.bar.foo.dc1.internal-v1.foo.consul": {
        "altStatName": "tcp.api-2.bar.foo.dc1.internal-v1.foo.consul",
        "endpointGroup": {
          "dynamic": {
            "config": {
              "connectTimeout": "5s",
              "disablePanicThreshold": true
            },
            "outboundTls": {
              "alpnProtocols": [
                "consul~tcp"
              ],
              "outboundMesh": {
                "identityKey": "test-identity",
                "sni": "api-2.bar.foo.dc1.internal-v1.foo.consul",
                "validationContext": {
                  "spiffeIds": [
                    "spiffe://foo.consul/ap/foo/ns/bar/identity/api2-identity"
                  ],
                  "trustBundlePeerNameKey": "local"
                }
              }
            }
          }
        },
        "name": "tcp.api-2.bar.foo.dc1.internal-v1.foo.consul",
        "protocol": "PROTOCOL_TCP"
      }
    },
    "identity": {
      "name": "test-identity",
      "tenancy": {
        "namespace": "bar",
        "partition": "foo"
      },
      "type": {
        "group": "auth",
        "groupVersion": "v2beta1",
        "kind": "WorkloadIdentity"
      }
    },
    "listeners": [
      {
        "direction": "DIRECTION_OUTBOUND",
        "name": "foo/bar/api-2:tcp:/path/to/socket",
        "routers": [
          {
            "l4": {
              "cluster": {
                "name": "tcp.api-2.bar.foo.dc1.internal-v1.foo.consul"
              },
              "statPrefix": "upstream.tcp.api-2.bar.foo.dc1"
            }
          }
        ],
        "unixSocket": {
          "mode": "0666",
          "path": "/path/to/socket"
        }
      }
    ]
  },
  "requiredEndpoints": {
    "tcp.api-2.bar.foo.dc1.internal-v1.foo.consul": {
      "id": {
        "name": "api-2",
        "tenancy": {
          "namespace": "bar",
          "partition": "foo"
        },
        "type": {
          "group": "catalog",
          "groupVersion": "v2beta1",
          "kind": "ServiceEndpoints"
        }
      },
      "meshPort": "mesh",
      "routePort": "tcp"
    }
  },
  "requiredLeafCertificates": {
    "test-identity": {
      "name": "test-identity",
      "namespace": "bar",
      "partition": "foo"
    }
  },
  "requiredTrustBundles": {
    "local": {
      "peer": "local"
    }
  }
}
