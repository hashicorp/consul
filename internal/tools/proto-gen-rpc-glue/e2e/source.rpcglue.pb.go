//go:build example
// +build example

// Code generated by proto-gen-rpc-glue. DO NOT EDIT.

package e2e

import (
	"time"
)

func (msg *ExampleWriteRequest) AllowStaleRead() bool {
	return false
}

func (msg *ExampleWriteRequest) HasTimedOut(start time.Time, rpcHoldTimeout time.Duration, a time.Duration, b time.Duration) (bool, error) {
	if msg == nil || msg.WriteRequest == nil {
		return false, nil
	}
	return msg.WriteRequest.HasTimedOut(start, rpcHoldTimeout, a, b)
}

func (msg *ExampleWriteRequest) IsRead() bool {
	return false
}

func (msg *ExampleWriteRequest) SetTokenSecret(s string) {
	msg.WriteRequest.SetTokenSecret(s)
}

func (msg *ExampleWriteRequest) TokenSecret() string {
	if msg == nil || msg.WriteRequest == nil {
		return ""
	}
	return msg.WriteRequest.TokenSecret()
}

func (msg *ExampleWriteRequest) Token() string {
	if msg.WriteRequest == nil {
		return ""
	}
	return msg.WriteRequest.Token
}

func (msg *ExampleWriteRequest) RequestDatacenter() string {
	if msg == nil || msg.TargetDatacenter == nil {
		return ""
	}
	return msg.TargetDatacenter.GetDatacenter()
}

func (msg *ExampleReadRequest) IsRead() bool {
	return true
}

func (msg *ExampleReadRequest) AllowStaleRead() bool {
	return msg.ReadRequest.AllowStaleRead()
}

func (msg *ExampleReadRequest) HasTimedOut(start time.Time, rpcHoldTimeout time.Duration, a time.Duration, b time.Duration) (bool, error) {
	if msg == nil || msg.ReadRequest == nil {
		return false, nil
	}
	return msg.ReadRequest.HasTimedOut(start, rpcHoldTimeout, a, b)
}

func (msg *ExampleReadRequest) SetTokenSecret(s string) {
	msg.ReadRequest.SetTokenSecret(s)
}

func (msg *ExampleReadRequest) TokenSecret() string {
	if msg == nil || msg.ReadRequest == nil {
		return ""
	}
	return msg.ReadRequest.TokenSecret()
}

func (msg *ExampleReadRequest) Token() string {
	if msg.ReadRequest == nil {
		return ""
	}
	return msg.ReadRequest.Token
}

func (msg *ExampleReadRequest) RequestDatacenter() string {
	if msg == nil || msg.TargetDatacenter == nil {
		return ""
	}
	return msg.TargetDatacenter.GetDatacenter()
}

func (msg *AltExampleWriteRequest) AllowStaleRead() bool {
	return false
}

func (msg *AltExampleWriteRequest) HasTimedOut(start time.Time, rpcHoldTimeout time.Duration, a time.Duration, b time.Duration) (bool, error) {
	if msg == nil || msg.AltWriteRequest == nil {
		return false, nil
	}
	return msg.AltWriteRequest.HasTimedOut(start, rpcHoldTimeout, a, b)
}

func (msg *AltExampleWriteRequest) IsRead() bool {
	return false
}

func (msg *AltExampleWriteRequest) SetTokenSecret(s string) {
	msg.AltWriteRequest.SetTokenSecret(s)
}

func (msg *AltExampleWriteRequest) TokenSecret() string {
	if msg == nil || msg.AltWriteRequest == nil {
		return ""
	}
	return msg.AltWriteRequest.TokenSecret()
}

func (msg *AltExampleWriteRequest) Token() string {
	if msg.AltWriteRequest == nil {
		return ""
	}
	return msg.AltWriteRequest.Token
}

func (msg *AltExampleReadRequest) IsRead() bool {
	return true
}

func (msg *AltExampleReadRequest) AllowStaleRead() bool {
	return msg.AltReadRequest.AllowStaleRead()
}

func (msg *AltExampleReadRequest) HasTimedOut(start time.Time, rpcHoldTimeout time.Duration, a time.Duration, b time.Duration) (bool, error) {
	if msg == nil || msg.AltReadRequest == nil {
		return false, nil
	}
	return msg.AltReadRequest.HasTimedOut(start, rpcHoldTimeout, a, b)
}

func (msg *AltExampleReadRequest) SetTokenSecret(s string) {
	msg.AltReadRequest.SetTokenSecret(s)
}

func (msg *AltExampleReadRequest) TokenSecret() string {
	if msg == nil || msg.AltReadRequest == nil {
		return ""
	}
	return msg.AltReadRequest.TokenSecret()
}

func (msg *AltExampleReadRequest) Token() string {
	if msg.AltReadRequest == nil {
		return ""
	}
	return msg.AltReadRequest.Token
}
