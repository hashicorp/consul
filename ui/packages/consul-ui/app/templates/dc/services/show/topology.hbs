<EventSource @src={{topology}} />
<div class="tab-section">
  {{#if (and (eq topology.Upstreams.length 0) (eq topology.Downstreams.length 0))}}
    <EmptyState>
      <BlockSlot @name="header">
        <h2>
          No dependencies
        </h2>
      </BlockSlot>
      <BlockSlot @name="body">
        <p>
          This service has neither downstreams nor upstreams, which means that no services are configured to connect with it. Add upstreams and intentions to ensure this service is connected with the rest of your service mesh.
        </p>
      </BlockSlot>
      <BlockSlot @name="actions">
        <li class="docs-link">
          <a href="{{env 'CONSUL_DOCS_URL'}}/connect/registration/service-registration#complete-configuration-example" rel="noopener noreferrer" target="_blank">Documentation on upstreams</a>
        </li>
      </BlockSlot>
    </EmptyState>
  {{else}}
    {{#if topology.FilteredByACLs}}
      <TopologyMetrics::Notice::LimitedAccess />
    {{/if}}
    <TopologyMetrics
      @nspace={{nspace}}
      @dc={{dc.Name}}
      @service={{items.firstObject}}
      @topology={{topology}}
      @metricsHref={{render-template urls.service (hash
        Datacenter=dc.Name
        Service=items.firstObject
      )}}
      @isRemoteDC={{not dc.Local}}
      @hasMetricsProvider={{hasMetricsProvider}}
      @oncreate={{route-action 'createIntention'}}
    />
  {{/if}}
</div>
