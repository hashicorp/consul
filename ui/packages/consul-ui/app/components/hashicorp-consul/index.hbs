{{!
  Copyright (c) HashiCorp, Inc.
  SPDX-License-Identifier: BUSL-1.1
}}

<App class='hashicorp-consul' ...attributes>

  <:notifications as |app|>
    {{#each flashMessages.queue as |flash|}}
      <app.Notification @delay={{sub flash.timeout flash.extendedTimeout}} @sticky={{flash.sticky}}>
        {{#if flash.dom}}
          {{{flash.dom}}}
        {{else}}
          {{#let (lowercase flash.type) (lowercase flash.action) as |status type|}}
            <Hds::Toast
              @color={{if (eq status 'error') 'critical' status}}
              data-notification
              as |T|
            >
              <T.Title>{{capitalize status}}!</T.Title>
              <T.Description>
                {{#if (eq type 'logout')}}
                  {{#if (eq status 'success')}}
                    {{t "components.hashicorp-consul.notifications.logged-out"}}
                  {{else}}
                    {{t "components.hashicorp-consul.notifications.logged-out-error"}}
                  {{/if}}
                {{else if (eq type 'authorize')}}
                  {{#if (eq status 'success')}}
                    {{t "components.hashicorp-consul.notifications.logged-in"}}
                  {{else}}
                    {{t "components.hashicorp-consul.notifications.logged-in-error"}}
                  {{/if}}
                {{else}}
                  {{#if (or (eq type 'use') (eq flash.model 'token'))}}
                    <Consul::Token::Notifications
                      @type={{type}}
                      @status={{status}}
                      @item={{flash.item}}
                      @error={{flash.error}}
                    />
                  {{else if (eq flash.model 'intention')}}
                    <Consul::Intention::Notifications
                      @type={{type}}
                      @status={{status}}
                      @item={{flash.item}}
                      @error={{flash.error}}
                    />
                  {{else if (eq flash.model 'role')}}
                    <Consul::Role::Notifications
                      @type={{type}}
                      @status={{status}}
                      @item={{flash.item}}
                      @error={{flash.error}}
                    />
                  {{else if (eq flash.model 'policy')}}
                    <Consul::Policy::Notifications
                      @type={{type}}
                      @status={{status}}
                      @item={{flash.item}}
                      @error={{flash.error}}
                    />
                  {{/if}}
                {{/if}}
              </T.Description>
            </Hds::Toast>

          {{/let}}
        {{/if}}
      </app.Notification>
    {{/each}}

  </:notifications>

  <:side-nav>
    <Hds::SideNav @hasA11yRefocus={{false}} @isResponsive={{false}} class='consul-side-nav' data-test-navigation>
      <:header>
        <Hds::SideNav::Header>
          <:logo>
            <Hds::SideNav::Header::HomeLink
              @icon='consul-color'
              @ariaLabel='Consul'
              @href={{href-to 'index' params=(hash peer=undefined)}}
              @isHrefExternal={{false}}
            />
          </:logo>
          <:actions>
            <Hds::Dropdown class='hds-side-nav__dropdown' @listPosition='bottom-left' as |dd|>
              <dd.ToggleIcon @icon='help' @text='Help & Support menu' />
              <Debug::Navigation @dropdown={{dd}} />
              <dd.Interactive
                @href={{env 'CONSUL_DOCS_URL'}}
                @isHrefExternal={{true}}
                @text={{t "components.hashicorp-consul.side-nav.support-menu.docs"}}
              />
              <dd.Interactive
                @href={{concat (env 'CONSUL_DOCS_LEARN_URL') '/consul'}}
                @isHrefExternal={{true}}
                @text={{t "components.hashicorp-consul.side-nav.support-menu.tutorials"}}
              />
              <dd.Interactive
                @href={{env 'CONSUL_REPO_ISSUES_URL'}}
                @isHrefExternal={{true}}
                @text={{t "components.hashicorp-consul.side-nav.support-menu.feedback"}}
              />
            </Hds::Dropdown>

            <Consul::Token::Selector
              @dc={{@dc}}
              @partition={{@partition}}
              @nspace={{@nspace}}
              @onchange={{@onchange}}
              as |selector|
            >
              <Ref @target={{this}} @name='tokenSelector' @value={{selector}} />
            </Consul::Token::Selector>
          </:actions>
        </Hds::SideNav::Header>
      </:header>
      <:body>
        <Hds::SideNav::List
          class='hds-side-nav-hide-when-minimized consul-side-nav__selector-group'
          as |SNL|
        >
          <HcpNavItem @list={{SNL}}/>
          <Consul::Datacenter::Selector
            @list={{SNL}}
            @dc={{@dc}}
            @partition={{@partition}}
            @nspace={{@nspace}}
            @dcs={{@dcs}}
          />

          <Consul::Partition::Selector
            @dc={{@dc}}
            @partition={{@partition}}
            @nspace={{@nspace}}
            @partitions={{this.partitions}}
            @list={{SNL}}
            @onchange={{action (mut this.partitions) value='data'}}
          />
          <Consul::Nspace::Selector
            @list={{SNL}}
            @dc={{@dc}}
            @partition={{@partition}}
            @nspace={{@nspace}}
            @nspaces={{this.nspaces}}
            @onchange={{action (mut this.nspaces) value='data'}}
          />
        </Hds::SideNav::List>
        <Hds::SideNav::List class='hds-side-nav-hide-when-minimized' as |SNL|>
          {{#if (can 'access overview')}}
            <SNL.Link
              @text={{t "components.hashicorp-consul.side-nav.overview"}}
              @route='dc.show'
              @models={{array @dc.Name}}
              @query={{hash peer=undefined}}
              @isActive={{is-href 'dc.show' @dc.Name}}
              data-test-main-nav-overview
            />
          {{/if}}
          {{#if (can 'read services')}}
            <SNL.Link
              @text={{t "components.hashicorp-consul.side-nav.services"}}
              @href={{href-to 'dc.services' @dc.Name params=(hash peer=undefined)}}
              @isHrefExternal={{false}}
              @isActive={{is-href 'dc.services' @dc.Name}}
              data-test-main-nav-services
            />
          {{/if}}
          {{#if (can 'read nodes')}}
            <SNL.Link
              @text={{t "components.hashicorp-consul.side-nav.nodes"}}
              @href={{href-to 'dc.nodes' @dc.Name params=(hash peer=undefined)}}
              @isHrefExternal={{false}}
              @isActive={{is-href 'dc.nodes' @dc.Name}}
              data-test-main-nav-nodes
            />
          {{/if}}
          {{#if (can 'read kv')}}
            <SNL.Link
              @text={{t "components.hashicorp-consul.side-nav.kv"}}
              @href={{href-to 'dc.kv' @dc.Name params=(hash peer=undefined)}}
              @isHrefExternal={{false}}
              @isActive={{is-href 'dc.kv' @dc.Name}}
              data-test-main-nav-kv
            />
          {{/if}}
          {{#if (can 'read intentions')}}
            <SNL.Link
              @text={{t "components.hashicorp-consul.side-nav.intentions"}}
              @href={{href-to 'dc.intentions' @dc.Name params=(hash peer=undefined)}}
              @isHrefExternal={{false}}
              @isActive={{is-href 'dc.intentions' @dc.Name}}
              data-test-main-nav-intentions
            />
          {{/if}}

          <Consul::Acl::Selector
            @dc={{@dc}}
            @partition={{@partition}}
            @nspace={{@nspace}}
            @list={{SNL}}
          />
          <Consul::Peer::Selector
            @dc={{@dc}}
            @partition={{@partition}}
            @nspace={{@nspace}}
            @list={{SNL}}
          />
        </Hds::SideNav::List>
      </:body>
      <:footer>
        <footer role='contentinfo' data-test-footer>
          <Hds::Text::Display
            class='hds-side-nav-hide-when-minimized'
            @size='100'
            @color='disabled'
          >
            {{t "components.hashicorp-consul.side-nav.footer" version=this.consulVersion}}
          </Hds::Text::Display>
          {{{concat '<!-- ' (env 'CONSUL_GIT_SHA') '-->'}}}
        </footer>
      </:footer>
    </Hds::SideNav>
  </:side-nav>

  <:main>
    {{yield
      (hash login=(if this.tokenSelector this.tokenSelector (hash open=undefined close=undefined)))
    }}
  </:main>
</App>