{{!
  Copyright (c) HashiCorp, Inc.
  SPDX-License-Identifier: BUSL-1.1
}}

<App class='hashicorp-consul' ...attributes>

  <:notifications as |app|>
    {{#each flashMessages.queue as |flash|}}
      <app.Notification @delay={{sub flash.timeout flash.extendedTimeout}} @sticky={{flash.sticky}}>
        {{#if flash.dom}}
          {{{flash.dom}}}
        {{else}}
          {{#let (lowercase flash.type) (lowercase flash.action) as |status type|}}
            <Hds::Toast
              @color={{if (eq status 'error') 'critical' status}}
              data-notification
              as |T|
            >
              <T.Title>{{capitalize status}}!</T.Title>
              <T.Description>
                {{#if (eq type 'logout')}}
                  {{#if (eq status 'success')}}
                    You are now logged out.
                  {{else}}
                    There was an error logging out.
                  {{/if}}
                {{else if (eq type 'authorize')}}
                  {{#if (eq status 'success')}}
                    You are now logged in.
                  {{else}}
                    There was an error, please check your SecretID/Token
                  {{/if}}
                {{else}}
                  {{#if (or (eq type 'use') (eq flash.model 'token'))}}
                    <Consul::Token::Notifications
                      @type={{type}}
                      @status={{status}}
                      @item={{flash.item}}
                      @error={{flash.error}}
                    />
                  {{else if (eq flash.model 'intention')}}
                    <Consul::Intention::Notifications
                      @type={{type}}
                      @status={{status}}
                      @item={{flash.item}}
                      @error={{flash.error}}
                    />
                  {{else if (eq flash.model 'role')}}
                    <Consul::Role::Notifications
                      @type={{type}}
                      @status={{status}}
                      @item={{flash.item}}
                      @error={{flash.error}}
                    />
                  {{else if (eq flash.model 'policy')}}
                    <Consul::Policy::Notifications
                      @type={{type}}
                      @status={{status}}
                      @item={{flash.item}}
                      @error={{flash.error}}
                    />
                  {{/if}}
                {{/if}}
              </T.Description>
            </Hds::Toast>

          {{/let}}
        {{/if}}
      </app.Notification>
    {{/each}}

  </:notifications>

  <:side-nav>
    <Hds::SideNav @isResponsive={{true}} class='consul-side-nav'>
      <:header>
        <Hds::SideNav::Header>
          <:logo>
            <Hds::SideNav::Header::HomeLink
              @icon='consul-color'
              @ariaLabel='Consul'
              @route='index'
              @query={{hash peer=undefined}}
            />
          </:logo>
          <:actions>
            <Hds::Dropdown class='hds-side-nav__dropdown' @listPosition='left' as |dd|>
              <dd.ToggleIcon @icon='help' @text='Help & Support menu' />
              <dd.Title @text='Help & Support' />
              <dd.Interactive
                @href={{env 'CONSUL_DOCS_URL'}}
                @isHrefExternal={{true}}
                @text='Documentation'
              />
              <dd.Interactive
                @href={{concat (env 'CONSUL_DOCS_LEARN_URL') '/consul'}}
                @isHrefExternal={{true}}
                @text='Tuorials'
              />
              <dd.Separator />
              <dd.Interactive
                @href={{env 'CONSUL_REPO_ISSUES_URL'}}
                @isHrefExternal={{true}}
                @text='Give feedback'
              />
            </Hds::Dropdown>
            <Hds::Dropdown class='hds-side-nav__dropdown' @listPosition='left' as |dd|>
              <dd.ToggleIcon @icon='user' @text='Account menu' />
              <dd.Title @text='Signed In' />
              <dd.Description @text='email@domain.com' />
              <dd.Interactive @href='#' @text='Account Settings' />
            </Hds::Dropdown>
          </:actions>
        </Hds::SideNav::Header>
      </:header>
      <:body>
        <Hds::SideNav::List
          class='hds-side-nav-hide-when-minimized consul-side-nav__selector-group'
          as |SNL|
        >
          <Consul::Datacenter::Selector
            @list={{SNL}}
            @dc={{@dc}}
            @partition={{@partition}}
            @nspace={{@nspace}}
            @dcs={{@dcs}}
          />
        </Hds::SideNav::List>
        <Hds::SideNav::List class='hds-side-nav-hide-when-minimized' as |SNL|>
          {{#if (can 'access overview')}}
            <SNL.Link
              @text='Overview'
              @route='dc.show'
              @query={{hash peer=undefined}}
              @isActive={{is-href 'dc.show' @dc.Name}}
              data-test-main-nav-overview
            />
          {{/if}}
          {{#if (can 'read services')}}
            <SNL.Link
              @text='Services'
              @route='dc.services'
              @models={{array @dc.Name}}
              @query={{hash peer=undefined}}
              @isActive={{is-href 'dc.services' @dc.Name}}
              data-test-main-nav-services
            />
          {{/if}}
          {{#if (can 'read nodes')}}
            <SNL.Link
              @text='Nodes'
              @route='dc.nodes'
              @models={{array @dc.Name}}
              @query={{hash peer=undefined}}
              @isActive={{is-href 'dc.nodes' @dc.Name}}
              data-test-main-nav-nodes
            />
          {{/if}}
          {{#if (can 'read kv')}}
            <SNL.Link
              @text='Key/Value'
              @route='dc.kv'
              @models={{array @dc.Name}}
              @query={{hash peer=undefined}}
              @isActive={{is-href 'dc.kv' @dc.Name}}
              data-test-main-nav-kv
            />
          {{/if}}
          {{#if (can 'read intentions')}}
            <SNL.Link
              @text='Intentions'
              @route='dc.intentions'
              @models={{array @dc.Name}}
              @query={{hash peer=undefined}}
              @isActive={{is-href 'dc.intentions' @dc.Name}}
              data-test-main-nav-intentions
            />
          {{/if}}

          <Consul::Acl::Selector
            @dc={{@dc}}
            @partition={{@partition}}
            @nspace={{@nspace}}
            @list={{SNL}}
          />
          <Consul::Peer::Selector
            @dc={{@dc}}
            @partition={{@partition}}
            @nspace={{@nspace}}
            @list={{SNL}}
          />
        </Hds::SideNav::List>
      </:body>
      <:footer>
        <Hds::Text::Display class='hds-side-nav-hide-when-minimized' @size='100' @color='disabled'>
          Consul v{{env 'CONSUL_VERSION'}}
        </Hds::Text::Display>
        {{{concat '<!-- ' (env 'CONSUL_GIT_SHA') '-->'}}}
      </:footer>
    </Hds::SideNav>

  </:side-nav>

  {{!-- <:main-nav>
    <Consul::Hcp::Home />
    <ul>
      <Consul::Datacenter::Selector
        @dc={{@dc}}
        @partition={{@partition}}
        @nspace={{@nspace}}
        @dcs={{@dcs}}
      />
      <Consul::Partition::Selector
        @dc={{@dc}}
        @partition={{@partition}}
        @nspace={{@nspace}}
        @partitions={{this.partitions}}
        @onchange={{action (mut this.partitions) value='data'}}
      />
      <Consul::Nspace::Selector
        @dc={{@dc}}
        @partition={{@partition}}
        @nspace={{@nspace}}
        @nspaces={{this.nspaces}}
        @onchange={{action (mut this.nspaces) value='data'}}
      />
    </ul>
  </:main-nav>

  <:complementary-nav>
    <ul>
      <Debug::Navigation />
      <li data-test-main-nav-help>
        <DisclosureMenu as |disclosure|>
          <disclosure.Action {{on 'click' disclosure.toggle}}>
            Help
          </disclosure.Action>
          <disclosure.Menu as |panel|>
            <panel.Menu as |menu|>
              <menu.Separator>
                Consul v{{env 'CONSUL_VERSION'}}
              </menu.Separator>
              <menu.Item class='docs-link'>
                <menu.Action @href={{env 'CONSUL_DOCS_URL'}} @external={{true}}>
                  Documentation
                </menu.Action>
              </menu.Item>
              <menu.Item class='learn-link'>
                <menu.Action
                  @href={{concat (env 'CONSUL_DOCS_LEARN_URL') '/consul'}}
                  @external={{true}}
                >
                  HashiCorp Learn
                </menu.Action>
              </menu.Item>
              <menu.Separator />
              <menu.Item class='feedback-link'>
                <menu.Action @href={{env 'CONSUL_REPO_ISSUES_URL'}} @external={{true}}>
                  Provide Feedback
                </menu.Action>
              </menu.Item>
            </panel.Menu>
          </disclosure.Menu>
        </DisclosureMenu>
      </li>
      <li data-test-main-nav-settings class={{if (is-href 'settings') 'is-active'}}>
        <a href={{href-to 'settings' params=(hash nspace=undefined partition=undefined)}}>
          Settings
        </a>
      </li>
      <Consul::Token::Selector
        @dc={{@dc}}
        @partition={{@partition}}
        @nspace={{@nspace}}
        @onchange={{@onchange}}
        as |selector|
      >
        <Ref @target={{this}} @name='tokenSelector' @value={{selector}} />
      </Consul::Token::Selector>
    </ul>
  </:complementary-nav> --}}

  <:main>
    {{yield
      (hash login=(if this.tokenSelector this.tokenSelector (hash open=undefined close=undefined)))
    }}
  </:main>

  <:content-info>
    <p>
      Consul v{{env 'CONSUL_VERSION'}}
    </p>
    {{{concat '<!-- ' (env 'CONSUL_GIT_SHA') '-->'}}}
  </:content-info>

</App>