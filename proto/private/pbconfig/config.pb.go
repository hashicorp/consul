// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: BUSL-1.1

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: private/pbconfig/config.proto

package pbconfig

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Config struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Datacenter        string                 `protobuf:"bytes,1,opt,name=Datacenter,proto3" json:"Datacenter,omitempty"`
	PrimaryDatacenter string                 `protobuf:"bytes,2,opt,name=PrimaryDatacenter,proto3" json:"PrimaryDatacenter,omitempty"`
	NodeName          string                 `protobuf:"bytes,3,opt,name=NodeName,proto3" json:"NodeName,omitempty"`
	SegmentName       string                 `protobuf:"bytes,4,opt,name=SegmentName,proto3" json:"SegmentName,omitempty"`
	Partition         string                 `protobuf:"bytes,9,opt,name=Partition,proto3" json:"Partition,omitempty"`
	ACL               *ACL                   `protobuf:"bytes,5,opt,name=ACL,proto3" json:"ACL,omitempty"`
	AutoEncrypt       *AutoEncrypt           `protobuf:"bytes,6,opt,name=AutoEncrypt,proto3" json:"AutoEncrypt,omitempty"`
	Gossip            *Gossip                `protobuf:"bytes,7,opt,name=Gossip,proto3" json:"Gossip,omitempty"`
	TLS               *TLS                   `protobuf:"bytes,8,opt,name=TLS,proto3" json:"TLS,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_private_pbconfig_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_private_pbconfig_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_private_pbconfig_config_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetDatacenter() string {
	if x != nil {
		return x.Datacenter
	}
	return ""
}

func (x *Config) GetPrimaryDatacenter() string {
	if x != nil {
		return x.PrimaryDatacenter
	}
	return ""
}

func (x *Config) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *Config) GetSegmentName() string {
	if x != nil {
		return x.SegmentName
	}
	return ""
}

func (x *Config) GetPartition() string {
	if x != nil {
		return x.Partition
	}
	return ""
}

func (x *Config) GetACL() *ACL {
	if x != nil {
		return x.ACL
	}
	return nil
}

func (x *Config) GetAutoEncrypt() *AutoEncrypt {
	if x != nil {
		return x.AutoEncrypt
	}
	return nil
}

func (x *Config) GetGossip() *Gossip {
	if x != nil {
		return x.Gossip
	}
	return nil
}

func (x *Config) GetTLS() *TLS {
	if x != nil {
		return x.TLS
	}
	return nil
}

type Gossip struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Encryption    *GossipEncryption      `protobuf:"bytes,1,opt,name=Encryption,proto3" json:"Encryption,omitempty"`
	RetryJoinLAN  []string               `protobuf:"bytes,2,rep,name=RetryJoinLAN,proto3" json:"RetryJoinLAN,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Gossip) Reset() {
	*x = Gossip{}
	mi := &file_private_pbconfig_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Gossip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gossip) ProtoMessage() {}

func (x *Gossip) ProtoReflect() protoreflect.Message {
	mi := &file_private_pbconfig_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gossip.ProtoReflect.Descriptor instead.
func (*Gossip) Descriptor() ([]byte, []int) {
	return file_private_pbconfig_config_proto_rawDescGZIP(), []int{1}
}

func (x *Gossip) GetEncryption() *GossipEncryption {
	if x != nil {
		return x.Encryption
	}
	return nil
}

func (x *Gossip) GetRetryJoinLAN() []string {
	if x != nil {
		return x.RetryJoinLAN
	}
	return nil
}

type GossipEncryption struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Key            string                 `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	VerifyIncoming bool                   `protobuf:"varint,2,opt,name=VerifyIncoming,proto3" json:"VerifyIncoming,omitempty"`
	VerifyOutgoing bool                   `protobuf:"varint,3,opt,name=VerifyOutgoing,proto3" json:"VerifyOutgoing,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GossipEncryption) Reset() {
	*x = GossipEncryption{}
	mi := &file_private_pbconfig_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GossipEncryption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipEncryption) ProtoMessage() {}

func (x *GossipEncryption) ProtoReflect() protoreflect.Message {
	mi := &file_private_pbconfig_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipEncryption.ProtoReflect.Descriptor instead.
func (*GossipEncryption) Descriptor() ([]byte, []int) {
	return file_private_pbconfig_config_proto_rawDescGZIP(), []int{2}
}

func (x *GossipEncryption) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GossipEncryption) GetVerifyIncoming() bool {
	if x != nil {
		return x.VerifyIncoming
	}
	return false
}

func (x *GossipEncryption) GetVerifyOutgoing() bool {
	if x != nil {
		return x.VerifyOutgoing
	}
	return false
}

type TLS struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	VerifyOutgoing       bool                   `protobuf:"varint,1,opt,name=VerifyOutgoing,proto3" json:"VerifyOutgoing,omitempty"`
	VerifyServerHostname bool                   `protobuf:"varint,2,opt,name=VerifyServerHostname,proto3" json:"VerifyServerHostname,omitempty"`
	CipherSuites         string                 `protobuf:"bytes,3,opt,name=CipherSuites,proto3" json:"CipherSuites,omitempty"`
	MinVersion           string                 `protobuf:"bytes,4,opt,name=MinVersion,proto3" json:"MinVersion,omitempty"`
	// Deprecated_PreferServerCipherSuites is deprecated. It is no longer
	// populated and should be ignored by clients.
	//
	// Deprecated: Marked as deprecated in private/pbconfig/config.proto.
	Deprecated_PreferServerCipherSuites bool `protobuf:"varint,5,opt,name=Deprecated_PreferServerCipherSuites,json=DeprecatedPreferServerCipherSuites,proto3" json:"Deprecated_PreferServerCipherSuites,omitempty"`
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *TLS) Reset() {
	*x = TLS{}
	mi := &file_private_pbconfig_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLS) ProtoMessage() {}

func (x *TLS) ProtoReflect() protoreflect.Message {
	mi := &file_private_pbconfig_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLS.ProtoReflect.Descriptor instead.
func (*TLS) Descriptor() ([]byte, []int) {
	return file_private_pbconfig_config_proto_rawDescGZIP(), []int{3}
}

func (x *TLS) GetVerifyOutgoing() bool {
	if x != nil {
		return x.VerifyOutgoing
	}
	return false
}

func (x *TLS) GetVerifyServerHostname() bool {
	if x != nil {
		return x.VerifyServerHostname
	}
	return false
}

func (x *TLS) GetCipherSuites() string {
	if x != nil {
		return x.CipherSuites
	}
	return ""
}

func (x *TLS) GetMinVersion() string {
	if x != nil {
		return x.MinVersion
	}
	return ""
}

// Deprecated: Marked as deprecated in private/pbconfig/config.proto.
func (x *TLS) GetDeprecated_PreferServerCipherSuites() bool {
	if x != nil {
		return x.Deprecated_PreferServerCipherSuites
	}
	return false
}

type ACL struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Enabled             bool                   `protobuf:"varint,1,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
	PolicyTTL           string                 `protobuf:"bytes,2,opt,name=PolicyTTL,proto3" json:"PolicyTTL,omitempty"`
	RoleTTL             string                 `protobuf:"bytes,3,opt,name=RoleTTL,proto3" json:"RoleTTL,omitempty"`
	TokenTTL            string                 `protobuf:"bytes,4,opt,name=TokenTTL,proto3" json:"TokenTTL,omitempty"`
	DownPolicy          string                 `protobuf:"bytes,5,opt,name=DownPolicy,proto3" json:"DownPolicy,omitempty"`
	DefaultPolicy       string                 `protobuf:"bytes,6,opt,name=DefaultPolicy,proto3" json:"DefaultPolicy,omitempty"`
	EnableKeyListPolicy bool                   `protobuf:"varint,7,opt,name=EnableKeyListPolicy,proto3" json:"EnableKeyListPolicy,omitempty"`
	Tokens              *ACLTokens             `protobuf:"bytes,8,opt,name=Tokens,proto3" json:"Tokens,omitempty"`
	// Deprecated_DisabledTTL is deprecated. It is no longer populated and should
	// be ignored by clients.
	//
	// Deprecated: Marked as deprecated in private/pbconfig/config.proto.
	Deprecated_DisabledTTL string `protobuf:"bytes,9,opt,name=Deprecated_DisabledTTL,json=DeprecatedDisabledTTL,proto3" json:"Deprecated_DisabledTTL,omitempty"`
	EnableTokenPersistence bool   `protobuf:"varint,10,opt,name=EnableTokenPersistence,proto3" json:"EnableTokenPersistence,omitempty"`
	MSPDisableBootstrap    bool   `protobuf:"varint,11,opt,name=MSPDisableBootstrap,proto3" json:"MSPDisableBootstrap,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ACL) Reset() {
	*x = ACL{}
	mi := &file_private_pbconfig_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ACL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACL) ProtoMessage() {}

func (x *ACL) ProtoReflect() protoreflect.Message {
	mi := &file_private_pbconfig_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACL.ProtoReflect.Descriptor instead.
func (*ACL) Descriptor() ([]byte, []int) {
	return file_private_pbconfig_config_proto_rawDescGZIP(), []int{4}
}

func (x *ACL) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ACL) GetPolicyTTL() string {
	if x != nil {
		return x.PolicyTTL
	}
	return ""
}

func (x *ACL) GetRoleTTL() string {
	if x != nil {
		return x.RoleTTL
	}
	return ""
}

func (x *ACL) GetTokenTTL() string {
	if x != nil {
		return x.TokenTTL
	}
	return ""
}

func (x *ACL) GetDownPolicy() string {
	if x != nil {
		return x.DownPolicy
	}
	return ""
}

func (x *ACL) GetDefaultPolicy() string {
	if x != nil {
		return x.DefaultPolicy
	}
	return ""
}

func (x *ACL) GetEnableKeyListPolicy() bool {
	if x != nil {
		return x.EnableKeyListPolicy
	}
	return false
}

func (x *ACL) GetTokens() *ACLTokens {
	if x != nil {
		return x.Tokens
	}
	return nil
}

// Deprecated: Marked as deprecated in private/pbconfig/config.proto.
func (x *ACL) GetDeprecated_DisabledTTL() string {
	if x != nil {
		return x.Deprecated_DisabledTTL
	}
	return ""
}

func (x *ACL) GetEnableTokenPersistence() bool {
	if x != nil {
		return x.EnableTokenPersistence
	}
	return false
}

func (x *ACL) GetMSPDisableBootstrap() bool {
	if x != nil {
		return x.MSPDisableBootstrap
	}
	return false
}

type ACLTokens struct {
	state                  protoimpl.MessageState     `protogen:"open.v1"`
	InitialManagement      string                     `protobuf:"bytes,1,opt,name=InitialManagement,proto3" json:"InitialManagement,omitempty"`
	Replication            string                     `protobuf:"bytes,2,opt,name=Replication,proto3" json:"Replication,omitempty"`
	AgentRecovery          string                     `protobuf:"bytes,3,opt,name=AgentRecovery,proto3" json:"AgentRecovery,omitempty"`
	Default                string                     `protobuf:"bytes,4,opt,name=Default,proto3" json:"Default,omitempty"`
	Agent                  string                     `protobuf:"bytes,5,opt,name=Agent,proto3" json:"Agent,omitempty"`
	ManagedServiceProvider []*ACLServiceProviderToken `protobuf:"bytes,6,rep,name=ManagedServiceProvider,proto3" json:"ManagedServiceProvider,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ACLTokens) Reset() {
	*x = ACLTokens{}
	mi := &file_private_pbconfig_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ACLTokens) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACLTokens) ProtoMessage() {}

func (x *ACLTokens) ProtoReflect() protoreflect.Message {
	mi := &file_private_pbconfig_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACLTokens.ProtoReflect.Descriptor instead.
func (*ACLTokens) Descriptor() ([]byte, []int) {
	return file_private_pbconfig_config_proto_rawDescGZIP(), []int{5}
}

func (x *ACLTokens) GetInitialManagement() string {
	if x != nil {
		return x.InitialManagement
	}
	return ""
}

func (x *ACLTokens) GetReplication() string {
	if x != nil {
		return x.Replication
	}
	return ""
}

func (x *ACLTokens) GetAgentRecovery() string {
	if x != nil {
		return x.AgentRecovery
	}
	return ""
}

func (x *ACLTokens) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *ACLTokens) GetAgent() string {
	if x != nil {
		return x.Agent
	}
	return ""
}

func (x *ACLTokens) GetManagedServiceProvider() []*ACLServiceProviderToken {
	if x != nil {
		return x.ManagedServiceProvider
	}
	return nil
}

type ACLServiceProviderToken struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessorID    string                 `protobuf:"bytes,1,opt,name=AccessorID,proto3" json:"AccessorID,omitempty"`
	SecretID      string                 `protobuf:"bytes,2,opt,name=SecretID,proto3" json:"SecretID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ACLServiceProviderToken) Reset() {
	*x = ACLServiceProviderToken{}
	mi := &file_private_pbconfig_config_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ACLServiceProviderToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACLServiceProviderToken) ProtoMessage() {}

func (x *ACLServiceProviderToken) ProtoReflect() protoreflect.Message {
	mi := &file_private_pbconfig_config_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACLServiceProviderToken.ProtoReflect.Descriptor instead.
func (*ACLServiceProviderToken) Descriptor() ([]byte, []int) {
	return file_private_pbconfig_config_proto_rawDescGZIP(), []int{6}
}

func (x *ACLServiceProviderToken) GetAccessorID() string {
	if x != nil {
		return x.AccessorID
	}
	return ""
}

func (x *ACLServiceProviderToken) GetSecretID() string {
	if x != nil {
		return x.SecretID
	}
	return ""
}

type AutoEncrypt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TLS           bool                   `protobuf:"varint,1,opt,name=TLS,proto3" json:"TLS,omitempty"`
	DNSSAN        []string               `protobuf:"bytes,2,rep,name=DNSSAN,proto3" json:"DNSSAN,omitempty"`
	IPSAN         []string               `protobuf:"bytes,3,rep,name=IPSAN,proto3" json:"IPSAN,omitempty"`
	AllowTLS      bool                   `protobuf:"varint,4,opt,name=AllowTLS,proto3" json:"AllowTLS,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutoEncrypt) Reset() {
	*x = AutoEncrypt{}
	mi := &file_private_pbconfig_config_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoEncrypt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoEncrypt) ProtoMessage() {}

func (x *AutoEncrypt) ProtoReflect() protoreflect.Message {
	mi := &file_private_pbconfig_config_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoEncrypt.ProtoReflect.Descriptor instead.
func (*AutoEncrypt) Descriptor() ([]byte, []int) {
	return file_private_pbconfig_config_proto_rawDescGZIP(), []int{7}
}

func (x *AutoEncrypt) GetTLS() bool {
	if x != nil {
		return x.TLS
	}
	return false
}

func (x *AutoEncrypt) GetDNSSAN() []string {
	if x != nil {
		return x.DNSSAN
	}
	return nil
}

func (x *AutoEncrypt) GetIPSAN() []string {
	if x != nil {
		return x.IPSAN
	}
	return nil
}

func (x *AutoEncrypt) GetAllowTLS() bool {
	if x != nil {
		return x.AllowTLS
	}
	return false
}

var File_private_pbconfig_config_proto protoreflect.FileDescriptor

const file_private_pbconfig_config_proto_rawDesc = "" +
	"\n" +
	"\x1dprivate/pbconfig/config.proto\x12 hashicorp.consul.internal.config\"\xb7\x03\n" +
	"\x06Config\x12\x1e\n" +
	"\n" +
	"Datacenter\x18\x01 \x01(\tR\n" +
	"Datacenter\x12,\n" +
	"\x11PrimaryDatacenter\x18\x02 \x01(\tR\x11PrimaryDatacenter\x12\x1a\n" +
	"\bNodeName\x18\x03 \x01(\tR\bNodeName\x12 \n" +
	"\vSegmentName\x18\x04 \x01(\tR\vSegmentName\x12\x1c\n" +
	"\tPartition\x18\t \x01(\tR\tPartition\x127\n" +
	"\x03ACL\x18\x05 \x01(\v2%.hashicorp.consul.internal.config.ACLR\x03ACL\x12O\n" +
	"\vAutoEncrypt\x18\x06 \x01(\v2-.hashicorp.consul.internal.config.AutoEncryptR\vAutoEncrypt\x12@\n" +
	"\x06Gossip\x18\a \x01(\v2(.hashicorp.consul.internal.config.GossipR\x06Gossip\x127\n" +
	"\x03TLS\x18\b \x01(\v2%.hashicorp.consul.internal.config.TLSR\x03TLS\"\x80\x01\n" +
	"\x06Gossip\x12R\n" +
	"\n" +
	"Encryption\x18\x01 \x01(\v22.hashicorp.consul.internal.config.GossipEncryptionR\n" +
	"Encryption\x12\"\n" +
	"\fRetryJoinLAN\x18\x02 \x03(\tR\fRetryJoinLAN\"t\n" +
	"\x10GossipEncryption\x12\x10\n" +
	"\x03Key\x18\x01 \x01(\tR\x03Key\x12&\n" +
	"\x0eVerifyIncoming\x18\x02 \x01(\bR\x0eVerifyIncoming\x12&\n" +
	"\x0eVerifyOutgoing\x18\x03 \x01(\bR\x0eVerifyOutgoing\"\xfa\x01\n" +
	"\x03TLS\x12&\n" +
	"\x0eVerifyOutgoing\x18\x01 \x01(\bR\x0eVerifyOutgoing\x122\n" +
	"\x14VerifyServerHostname\x18\x02 \x01(\bR\x14VerifyServerHostname\x12\"\n" +
	"\fCipherSuites\x18\x03 \x01(\tR\fCipherSuites\x12\x1e\n" +
	"\n" +
	"MinVersion\x18\x04 \x01(\tR\n" +
	"MinVersion\x12S\n" +
	"#Deprecated_PreferServerCipherSuites\x18\x05 \x01(\bB\x02\x18\x01R\"DeprecatedPreferServerCipherSuites\"\xd5\x03\n" +
	"\x03ACL\x12\x18\n" +
	"\aEnabled\x18\x01 \x01(\bR\aEnabled\x12\x1c\n" +
	"\tPolicyTTL\x18\x02 \x01(\tR\tPolicyTTL\x12\x18\n" +
	"\aRoleTTL\x18\x03 \x01(\tR\aRoleTTL\x12\x1a\n" +
	"\bTokenTTL\x18\x04 \x01(\tR\bTokenTTL\x12\x1e\n" +
	"\n" +
	"DownPolicy\x18\x05 \x01(\tR\n" +
	"DownPolicy\x12$\n" +
	"\rDefaultPolicy\x18\x06 \x01(\tR\rDefaultPolicy\x120\n" +
	"\x13EnableKeyListPolicy\x18\a \x01(\bR\x13EnableKeyListPolicy\x12C\n" +
	"\x06Tokens\x18\b \x01(\v2+.hashicorp.consul.internal.config.ACLTokensR\x06Tokens\x129\n" +
	"\x16Deprecated_DisabledTTL\x18\t \x01(\tB\x02\x18\x01R\x15DeprecatedDisabledTTL\x126\n" +
	"\x16EnableTokenPersistence\x18\n" +
	" \x01(\bR\x16EnableTokenPersistence\x120\n" +
	"\x13MSPDisableBootstrap\x18\v \x01(\bR\x13MSPDisableBootstrap\"\xa4\x02\n" +
	"\tACLTokens\x12,\n" +
	"\x11InitialManagement\x18\x01 \x01(\tR\x11InitialManagement\x12 \n" +
	"\vReplication\x18\x02 \x01(\tR\vReplication\x12$\n" +
	"\rAgentRecovery\x18\x03 \x01(\tR\rAgentRecovery\x12\x18\n" +
	"\aDefault\x18\x04 \x01(\tR\aDefault\x12\x14\n" +
	"\x05Agent\x18\x05 \x01(\tR\x05Agent\x12q\n" +
	"\x16ManagedServiceProvider\x18\x06 \x03(\v29.hashicorp.consul.internal.config.ACLServiceProviderTokenR\x16ManagedServiceProvider\"U\n" +
	"\x17ACLServiceProviderToken\x12\x1e\n" +
	"\n" +
	"AccessorID\x18\x01 \x01(\tR\n" +
	"AccessorID\x12\x1a\n" +
	"\bSecretID\x18\x02 \x01(\tR\bSecretID\"i\n" +
	"\vAutoEncrypt\x12\x10\n" +
	"\x03TLS\x18\x01 \x01(\bR\x03TLS\x12\x16\n" +
	"\x06DNSSAN\x18\x02 \x03(\tR\x06DNSSAN\x12\x14\n" +
	"\x05IPSAN\x18\x03 \x03(\tR\x05IPSAN\x12\x1a\n" +
	"\bAllowTLS\x18\x04 \x01(\bR\bAllowTLSB\x8b\x02\n" +
	"$com.hashicorp.consul.internal.configB\vConfigProtoP\x01Z2github.com/hashicorp/consul/proto/private/pbconfig\xa2\x02\x04HCIC\xaa\x02 Hashicorp.Consul.Internal.Config\xca\x02 Hashicorp\\Consul\\Internal\\Config\xe2\x02,Hashicorp\\Consul\\Internal\\Config\\GPBMetadata\xea\x02#Hashicorp::Consul::Internal::Configb\x06proto3"

var (
	file_private_pbconfig_config_proto_rawDescOnce sync.Once
	file_private_pbconfig_config_proto_rawDescData []byte
)

func file_private_pbconfig_config_proto_rawDescGZIP() []byte {
	file_private_pbconfig_config_proto_rawDescOnce.Do(func() {
		file_private_pbconfig_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_private_pbconfig_config_proto_rawDesc), len(file_private_pbconfig_config_proto_rawDesc)))
	})
	return file_private_pbconfig_config_proto_rawDescData
}

var file_private_pbconfig_config_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_private_pbconfig_config_proto_goTypes = []any{
	(*Config)(nil),                  // 0: hashicorp.consul.internal.config.Config
	(*Gossip)(nil),                  // 1: hashicorp.consul.internal.config.Gossip
	(*GossipEncryption)(nil),        // 2: hashicorp.consul.internal.config.GossipEncryption
	(*TLS)(nil),                     // 3: hashicorp.consul.internal.config.TLS
	(*ACL)(nil),                     // 4: hashicorp.consul.internal.config.ACL
	(*ACLTokens)(nil),               // 5: hashicorp.consul.internal.config.ACLTokens
	(*ACLServiceProviderToken)(nil), // 6: hashicorp.consul.internal.config.ACLServiceProviderToken
	(*AutoEncrypt)(nil),             // 7: hashicorp.consul.internal.config.AutoEncrypt
}
var file_private_pbconfig_config_proto_depIdxs = []int32{
	4, // 0: hashicorp.consul.internal.config.Config.ACL:type_name -> hashicorp.consul.internal.config.ACL
	7, // 1: hashicorp.consul.internal.config.Config.AutoEncrypt:type_name -> hashicorp.consul.internal.config.AutoEncrypt
	1, // 2: hashicorp.consul.internal.config.Config.Gossip:type_name -> hashicorp.consul.internal.config.Gossip
	3, // 3: hashicorp.consul.internal.config.Config.TLS:type_name -> hashicorp.consul.internal.config.TLS
	2, // 4: hashicorp.consul.internal.config.Gossip.Encryption:type_name -> hashicorp.consul.internal.config.GossipEncryption
	5, // 5: hashicorp.consul.internal.config.ACL.Tokens:type_name -> hashicorp.consul.internal.config.ACLTokens
	6, // 6: hashicorp.consul.internal.config.ACLTokens.ManagedServiceProvider:type_name -> hashicorp.consul.internal.config.ACLServiceProviderToken
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_private_pbconfig_config_proto_init() }
func file_private_pbconfig_config_proto_init() {
	if File_private_pbconfig_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_private_pbconfig_config_proto_rawDesc), len(file_private_pbconfig_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_private_pbconfig_config_proto_goTypes,
		DependencyIndexes: file_private_pbconfig_config_proto_depIdxs,
		MessageInfos:      file_private_pbconfig_config_proto_msgTypes,
	}.Build()
	File_private_pbconfig_config_proto = out.File
	file_private_pbconfig_config_proto_goTypes = nil
	file_private_pbconfig_config_proto_depIdxs = nil
}
