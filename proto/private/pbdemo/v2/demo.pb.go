// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: BUSL-1.1

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: private/pbdemo/v2/demo.proto

// This package contains fake resource types, which are useful for working on
// Consul's generic storage APIs.

package demov2

import (
	pbresource "github.com/hashicorp/consul/proto-public/pbresource"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Genre int32

const (
	Genre_GENRE_UNSPECIFIED Genre = 0
	Genre_GENRE_JAZZ        Genre = 1
	Genre_GENRE_FOLK        Genre = 2
	Genre_GENRE_POP         Genre = 3
	Genre_GENRE_METAL       Genre = 4
	Genre_GENRE_PUNK        Genre = 5
	Genre_GENRE_BLUES       Genre = 6
	Genre_GENRE_R_AND_B     Genre = 7
	Genre_GENRE_COUNTRY     Genre = 8
	Genre_GENRE_DISCO       Genre = 9
	Genre_GENRE_SKA         Genre = 10
	Genre_GENRE_HIP_HOP     Genre = 11
	Genre_GENRE_INDIE       Genre = 12
	Genre_GENRE_ROCK        Genre = 13
)

// Enum value maps for Genre.
var (
	Genre_name = map[int32]string{
		0:  "GENRE_UNSPECIFIED",
		1:  "GENRE_JAZZ",
		2:  "GENRE_FOLK",
		3:  "GENRE_POP",
		4:  "GENRE_METAL",
		5:  "GENRE_PUNK",
		6:  "GENRE_BLUES",
		7:  "GENRE_R_AND_B",
		8:  "GENRE_COUNTRY",
		9:  "GENRE_DISCO",
		10: "GENRE_SKA",
		11: "GENRE_HIP_HOP",
		12: "GENRE_INDIE",
		13: "GENRE_ROCK",
	}
	Genre_value = map[string]int32{
		"GENRE_UNSPECIFIED": 0,
		"GENRE_JAZZ":        1,
		"GENRE_FOLK":        2,
		"GENRE_POP":         3,
		"GENRE_METAL":       4,
		"GENRE_PUNK":        5,
		"GENRE_BLUES":       6,
		"GENRE_R_AND_B":     7,
		"GENRE_COUNTRY":     8,
		"GENRE_DISCO":       9,
		"GENRE_SKA":         10,
		"GENRE_HIP_HOP":     11,
		"GENRE_INDIE":       12,
		"GENRE_ROCK":        13,
	}
)

func (x Genre) Enum() *Genre {
	p := new(Genre)
	*p = x
	return p
}

func (x Genre) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Genre) Descriptor() protoreflect.EnumDescriptor {
	return file_private_pbdemo_v2_demo_proto_enumTypes[0].Descriptor()
}

func (Genre) Type() protoreflect.EnumType {
	return &file_private_pbdemo_v2_demo_proto_enumTypes[0]
}

func (x Genre) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Genre.Descriptor instead.
func (Genre) EnumDescriptor() ([]byte, []int) {
	return file_private_pbdemo_v2_demo_proto_rawDescGZIP(), []int{0}
}

type Artist struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Genre         Genre                  `protobuf:"varint,2,opt,name=genre,proto3,enum=hashicorp.consul.internal.demo.v2.Genre" json:"genre,omitempty"`
	GroupMembers  map[string]string      `protobuf:"bytes,3,rep,name=group_members,json=groupMembers,proto3" json:"group_members,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Artist) Reset() {
	*x = Artist{}
	mi := &file_private_pbdemo_v2_demo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Artist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artist) ProtoMessage() {}

func (x *Artist) ProtoReflect() protoreflect.Message {
	mi := &file_private_pbdemo_v2_demo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artist.ProtoReflect.Descriptor instead.
func (*Artist) Descriptor() ([]byte, []int) {
	return file_private_pbdemo_v2_demo_proto_rawDescGZIP(), []int{0}
}

func (x *Artist) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Artist) GetGenre() Genre {
	if x != nil {
		return x.Genre
	}
	return Genre_GENRE_UNSPECIFIED
}

func (x *Artist) GetGroupMembers() map[string]string {
	if x != nil {
		return x.GroupMembers
	}
	return nil
}

type Album struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Title              string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	YearOfRelease      int32                  `protobuf:"varint,2,opt,name=year_of_release,json=yearOfRelease,proto3" json:"year_of_release,omitempty"`
	CriticallyAclaimed bool                   `protobuf:"varint,3,opt,name=critically_aclaimed,json=criticallyAclaimed,proto3" json:"critically_aclaimed,omitempty"`
	Tracks             []string               `protobuf:"bytes,4,rep,name=tracks,proto3" json:"tracks,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Album) Reset() {
	*x = Album{}
	mi := &file_private_pbdemo_v2_demo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Album) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Album) ProtoMessage() {}

func (x *Album) ProtoReflect() protoreflect.Message {
	mi := &file_private_pbdemo_v2_demo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Album.ProtoReflect.Descriptor instead.
func (*Album) Descriptor() ([]byte, []int) {
	return file_private_pbdemo_v2_demo_proto_rawDescGZIP(), []int{1}
}

func (x *Album) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Album) GetYearOfRelease() int32 {
	if x != nil {
		return x.YearOfRelease
	}
	return 0
}

func (x *Album) GetCriticallyAclaimed() bool {
	if x != nil {
		return x.CriticallyAclaimed
	}
	return false
}

func (x *Album) GetTracks() []string {
	if x != nil {
		return x.Tracks
	}
	return nil
}

type Festival struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	Name            string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Genres          []Genre                 `protobuf:"varint,2,rep,packed,name=genres,proto3,enum=hashicorp.consul.internal.demo.v2.Genre" json:"genres,omitempty"`
	Artists         []*Artist               `protobuf:"bytes,3,rep,name=artists,proto3" json:"artists,omitempty"`
	BoundReferences []*pbresource.Reference `protobuf:"bytes,4,rep,name=bound_references,json=boundReferences,proto3" json:"bound_references,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Festival) Reset() {
	*x = Festival{}
	mi := &file_private_pbdemo_v2_demo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Festival) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Festival) ProtoMessage() {}

func (x *Festival) ProtoReflect() protoreflect.Message {
	mi := &file_private_pbdemo_v2_demo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Festival.ProtoReflect.Descriptor instead.
func (*Festival) Descriptor() ([]byte, []int) {
	return file_private_pbdemo_v2_demo_proto_rawDescGZIP(), []int{2}
}

func (x *Festival) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Festival) GetGenres() []Genre {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *Festival) GetArtists() []*Artist {
	if x != nil {
		return x.Artists
	}
	return nil
}

func (x *Festival) GetBoundReferences() []*pbresource.Reference {
	if x != nil {
		return x.BoundReferences
	}
	return nil
}

var File_private_pbdemo_v2_demo_proto protoreflect.FileDescriptor

const file_private_pbdemo_v2_demo_proto_rawDesc = "" +
	"\n" +
	"\x1cprivate/pbdemo/v2/demo.proto\x12!hashicorp.consul.internal.demo.v2\x1a\x1cpbresource/annotations.proto\x1a\x19pbresource/resource.proto\"\x87\x02\n" +
	"\x06Artist\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12>\n" +
	"\x05genre\x18\x02 \x01(\x0e2(.hashicorp.consul.internal.demo.v2.GenreR\x05genre\x12`\n" +
	"\rgroup_members\x18\x03 \x03(\v2;.hashicorp.consul.internal.demo.v2.Artist.GroupMembersEntryR\fgroupMembers\x1a?\n" +
	"\x11GroupMembersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01:\x06\xa2\x93\x04\x02\b\x03\"\x96\x01\n" +
	"\x05Album\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12&\n" +
	"\x0fyear_of_release\x18\x02 \x01(\x05R\ryearOfRelease\x12/\n" +
	"\x13critically_aclaimed\x18\x03 \x01(\bR\x12criticallyAclaimed\x12\x16\n" +
	"\x06tracks\x18\x04 \x03(\tR\x06tracks:\x06\xa2\x93\x04\x02\b\x03\"\xfe\x01\n" +
	"\bFestival\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12@\n" +
	"\x06genres\x18\x02 \x03(\x0e2(.hashicorp.consul.internal.demo.v2.GenreR\x06genres\x12C\n" +
	"\aartists\x18\x03 \x03(\v2).hashicorp.consul.internal.demo.v2.ArtistR\aartists\x12O\n" +
	"\x10bound_references\x18\x04 \x03(\v2$.hashicorp.consul.resource.ReferenceR\x0fboundReferences:\x06\xa2\x93\x04\x02\b\x03*\xf9\x01\n" +
	"\x05Genre\x12\x15\n" +
	"\x11GENRE_UNSPECIFIED\x10\x00\x12\x0e\n" +
	"\n" +
	"GENRE_JAZZ\x10\x01\x12\x0e\n" +
	"\n" +
	"GENRE_FOLK\x10\x02\x12\r\n" +
	"\tGENRE_POP\x10\x03\x12\x0f\n" +
	"\vGENRE_METAL\x10\x04\x12\x0e\n" +
	"\n" +
	"GENRE_PUNK\x10\x05\x12\x0f\n" +
	"\vGENRE_BLUES\x10\x06\x12\x11\n" +
	"\rGENRE_R_AND_B\x10\a\x12\x11\n" +
	"\rGENRE_COUNTRY\x10\b\x12\x0f\n" +
	"\vGENRE_DISCO\x10\t\x12\r\n" +
	"\tGENRE_SKA\x10\n" +
	"\x12\x11\n" +
	"\rGENRE_HIP_HOP\x10\v\x12\x0f\n" +
	"\vGENRE_INDIE\x10\f\x12\x0e\n" +
	"\n" +
	"GENRE_ROCK\x10\rB\x97\x02\n" +
	"%com.hashicorp.consul.internal.demo.v2B\tDemoProtoP\x01Z:github.com/hashicorp/consul/proto/private/pbdemo/v2;demov2\xa2\x02\x04HCID\xaa\x02!Hashicorp.Consul.Internal.Demo.V2\xca\x02!Hashicorp\\Consul\\Internal\\Demo\\V2\xe2\x02-Hashicorp\\Consul\\Internal\\Demo\\V2\\GPBMetadata\xea\x02%Hashicorp::Consul::Internal::Demo::V2b\x06proto3"

var (
	file_private_pbdemo_v2_demo_proto_rawDescOnce sync.Once
	file_private_pbdemo_v2_demo_proto_rawDescData []byte
)

func file_private_pbdemo_v2_demo_proto_rawDescGZIP() []byte {
	file_private_pbdemo_v2_demo_proto_rawDescOnce.Do(func() {
		file_private_pbdemo_v2_demo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_private_pbdemo_v2_demo_proto_rawDesc), len(file_private_pbdemo_v2_demo_proto_rawDesc)))
	})
	return file_private_pbdemo_v2_demo_proto_rawDescData
}

var file_private_pbdemo_v2_demo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_private_pbdemo_v2_demo_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_private_pbdemo_v2_demo_proto_goTypes = []any{
	(Genre)(0),                   // 0: hashicorp.consul.internal.demo.v2.Genre
	(*Artist)(nil),               // 1: hashicorp.consul.internal.demo.v2.Artist
	(*Album)(nil),                // 2: hashicorp.consul.internal.demo.v2.Album
	(*Festival)(nil),             // 3: hashicorp.consul.internal.demo.v2.Festival
	nil,                          // 4: hashicorp.consul.internal.demo.v2.Artist.GroupMembersEntry
	(*pbresource.Reference)(nil), // 5: hashicorp.consul.resource.Reference
}
var file_private_pbdemo_v2_demo_proto_depIdxs = []int32{
	0, // 0: hashicorp.consul.internal.demo.v2.Artist.genre:type_name -> hashicorp.consul.internal.demo.v2.Genre
	4, // 1: hashicorp.consul.internal.demo.v2.Artist.group_members:type_name -> hashicorp.consul.internal.demo.v2.Artist.GroupMembersEntry
	0, // 2: hashicorp.consul.internal.demo.v2.Festival.genres:type_name -> hashicorp.consul.internal.demo.v2.Genre
	1, // 3: hashicorp.consul.internal.demo.v2.Festival.artists:type_name -> hashicorp.consul.internal.demo.v2.Artist
	5, // 4: hashicorp.consul.internal.demo.v2.Festival.bound_references:type_name -> hashicorp.consul.resource.Reference
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_private_pbdemo_v2_demo_proto_init() }
func file_private_pbdemo_v2_demo_proto_init() {
	if File_private_pbdemo_v2_demo_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_private_pbdemo_v2_demo_proto_rawDesc), len(file_private_pbdemo_v2_demo_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_private_pbdemo_v2_demo_proto_goTypes,
		DependencyIndexes: file_private_pbdemo_v2_demo_proto_depIdxs,
		EnumInfos:         file_private_pbdemo_v2_demo_proto_enumTypes,
		MessageInfos:      file_private_pbdemo_v2_demo_proto_msgTypes,
	}.Build()
	File_private_pbdemo_v2_demo_proto = out.File
	file_private_pbdemo_v2_demo_proto_goTypes = nil
	file_private_pbdemo_v2_demo_proto_depIdxs = nil
}
